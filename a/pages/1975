{"id":1975,"date":"2020-12-28T09:50:26","date_gmt":"2020-12-28T09:50:26","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=1975"},"modified":"2020-12-28T09:56:33","modified_gmt":"2020-12-28T09:56:33","slug":"python-string-join","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/python-string-methods\/python-string-join\/","title":{"rendered":"Python String join()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the Python String <code>join()<\/code> method to concatenate strings in an iterable into one string.<\/p>\n\n\n\n<h2>Introduction to the Python String join() method<\/h2>\n\n\n\n<p>The string <code>join()<\/code> method returns a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-string\/\">string<\/a> which is the <a href=\"https:\/\/www.pythontutorial.net\/python-string-methods\/python-string-concatenation\/\">concatenation of strings<\/a> in an <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-iterables\/\">iterable<\/a> such as a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-tuples\/\">tuple<\/a>, a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-list\/\">list<\/a>, a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-dictionary\/\">dictionary<\/a>, and a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-set\/\">set<\/a>.<\/p>\n\n\n\n<p>The following shows the syntax of the <code>join()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">str<\/span><span class=\"hljs-selector-class\">.join<\/span>(<span class=\"hljs-selector-tag\">iterable<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>str<\/code> will be the separator between elements in the result string.<\/p>\n\n\n\n<p>If the <code>iterable<\/code> contains any non-string value, the <code>join()<\/code> method will raise a <code>TypeError<\/code>. To fix it, you need to convert non-string values to strings before calling the <code>join()<\/code> method.<\/p>\n\n\n\n<p>The <code>join()<\/code> method has many practical applications. For example, you can use the <code>join()<\/code> method to compose a row for a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-read-csv-file\/\">CSV file<\/a>.<\/p>\n\n\n\n<h2>Python string join examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the string <code>join()<\/code> method.<\/p>\n\n\n\n<h3>1) Using string join() method to concatenate multiple strings into a string<\/h3>\n\n\n\n<p>The following example uses the string <code>join()<\/code> method to concatenate a tuple of strings without a separator:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">colors = (<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>)\nrgb = <span class=\"hljs-string\">''<\/span>.join(colors)\n<span class=\"hljs-keyword\">print<\/span>(rgb)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">redgreenblue<\/code><\/span><\/pre>\n\n\n<p>The following example uses the string <code>join()<\/code> method with the comma separator (<code>,<\/code>):<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">colors = (<span class=\"hljs-string\">'red'<\/span>, <span class=\"hljs-string\">'green'<\/span>, <span class=\"hljs-string\">'blue'<\/span>)\nrgb = <span class=\"hljs-string\">','<\/span>.join(colors)\n<span class=\"hljs-keyword\">print<\/span>(rgb)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">red,green,blue<\/code><\/span><\/pre>\n\n\n<h3>2) Using string <code>join()<\/code> method to concatenate non-string data into a string<\/h3>\n\n\n\n<p>The following example uses the <code>join()<\/code> method to concatenate strings and numbers in a tuple to a single string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">product = (<span class=\"hljs-string\">'Laptop'<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">699<\/span>)\nresult = <span class=\"hljs-string\">','<\/span>.join(product)\n<span class=\"hljs-keyword\">print<\/span>(result)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">TypeError<\/span>: sequence item <span class=\"hljs-number\">1<\/span>: expected str instance, int found<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>It issued a <code>TypeError<\/code> because the tuple <code>product<\/code> has two integers.<\/p>\n\n\n\n<p>To concatenate elements in the tuple, you&#8217;ll need to convert them into strings before concatenating. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">product = (<span class=\"hljs-string\">'Laptop'<\/span>, <span class=\"hljs-number\">10<\/span>, <span class=\"hljs-number\">699<\/span>)\nresult = <span class=\"hljs-string\">','<\/span>.join(str(d) <span class=\"hljs-keyword\">for<\/span> d in product)\n<span class=\"hljs-keyword\">print<\/span>(result)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">Laptop,10,699<\/code><\/span><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, use a <a href=\"https:\/\/www.pythontutorial.net\/advanced-python\/python-generator-expressions\/\">generator expression<\/a> to convert each element of the <code>product<\/code> tuple to a string.<\/li><li>Second, use the <code>join()<\/code> method to concatenate the string elements<\/li><\/ul>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>join()<\/code> method to concatenate multiple strings in an iterable into one string.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1975\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-string-methods\/python-string-join\/\"\n\t\t\t\tdata-post-title=\"Python String join()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1975\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-string-methods\/python-string-join\/\"\n\t\t\t\tdata-post-title=\"Python String join()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the Python String join() method to concatenate strings in an iterable into one string. Introduction to the Python String join() method The string join() method returns a string which is the concatenation of strings in an iterable such as a tuple, a list, a dictionary, and [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1925,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1975"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=1975"}],"version-history":[{"count":3,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1975\/revisions"}],"predecessor-version":[{"id":1979,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1975\/revisions\/1979"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1925"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=1975"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}