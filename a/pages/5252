{"id":5252,"date":"2022-10-15T08:03:56","date_gmt":"2022-10-15T08:03:56","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=5252"},"modified":"2022-10-15T11:32:10","modified_gmt":"2022-10-15T11:32:10","slug":"pyqt-qdockwidget","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qdockwidget\/","title":{"rendered":"PyQt QDockWidget"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PyQt <code>QDockWidget<\/code> class to create a docked widget.<\/p>\n\n\n\n<h2>Introduction to the PyQt QDockWidget class<\/h2>\n\n\n\n<p>The <code>QDockWidget<\/code> class allows you to create a widget that can be docked inside the <code>QMainWidow<\/code> or floated as a top-level window:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"629\" height=\"423\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QDockWidget-Editor-Example.png\" alt=\"PyQt QDockWidget - Editor Example\" class=\"wp-image-5257\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QDockWidget-Editor-Example.png 629w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QDockWidget-Editor-Example-300x202.png 300w\" sizes=\"(max-width: 629px) 100vw, 629px\" \/><\/figure>\n\n\n\n<p>A <code>QDockWidget<\/code> has a title bar and a content area. The title bar displays the dock widget title, a <em>float<\/em> button, and a close button.<\/p>\n\n\n\n<p>To create a dock widget and add it to the main window, you follow these steps<\/p>\n\n\n\n<p>First, create a dock widget using the <code>QDockWidget<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">dock = QDockWidget(tite)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, set the dock widget features using the <code><code>setFeatures()<\/code><\/code> method of the <code>QDockWidget<\/code> object. For example, you can disable all dock features using the <code><code>setFeatures()<\/code><\/code> method like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">dock.setFeatures(QDockWidget.DockWidgetFeature.NoDockWidgetFeatures)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, add the dock widget to the main window using the <code>addDockWidget()<\/code> method. For example, the following adds the dock widget to the left docking area:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, dock)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Now, the dock widget is empty.<\/p>\n\n\n\n<p>To add widgets to a dock widget, you wrap the widgets inside the <code>QWidget<\/code> and use the <code>setWidget()<\/code> method of the <code>QDockWidget<\/code> to set the widget for the dock widget.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-comment\"># create a widget<\/span>\nwidget = QWidget()\n\n<span class=\"hljs-comment\"># add widgets to the widget<\/span>\n<span class=\"hljs-comment\"># ...<\/span>\n\n<span class=\"hljs-comment\"># add the widget the dock wiget<\/span>\ndock.setWidget(widget)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If a dock is closed, you can show it again using the show() method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">dock<\/span><span class=\"hljs-selector-class\">.show<\/span>()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following program shows how to create a dock widget for the Text Editor program:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\r\n<span class=\"hljs-keyword\">import<\/span> re\r\n<span class=\"hljs-keyword\">from<\/span> pathlib <span class=\"hljs-keyword\">import<\/span> Path\r\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QMainWindow, QTextEdit, QFileDialog, QMessageBox, QToolBar, QLabel, QDockWidget, QWidget, QFormLayout, QLineEdit, QPushButton\r\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtGui <span class=\"hljs-keyword\">import<\/span> QIcon, QAction\r\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtCore <span class=\"hljs-keyword\">import<\/span> QSize\r\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtCore <span class=\"hljs-keyword\">import<\/span> Qt\r\n\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QMainWindow)<\/span>:<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\r\n        super().__init__(*args, **kwargs)\r\n\r\n        self.setWindowIcon(QIcon(<span class=\"hljs-string\">'.\/assets\/editor.png'<\/span>))\r\n        self.setGeometry(<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">500<\/span>, <span class=\"hljs-number\">300<\/span>)\r\n\r\n        self.title = <span class=\"hljs-string\">'Editor'<\/span>\r\n        self.filters = <span class=\"hljs-string\">'Text Files (*.txt)'<\/span>\r\n\r\n        self.set_title()\r\n\r\n        self.path = <span class=\"hljs-literal\">None<\/span>\r\n\r\n        self.text_edit = QTextEdit(self)\r\n        self.text_edit.textChanged.connect(self.text_changed)\r\n        self.setCentralWidget(self.text_edit)\r\n\r\n        menu_bar = self.menuBar()\r\n\r\n        file_menu = menu_bar.addMenu(<span class=\"hljs-string\">'&amp;File'<\/span>)\r\n        edit_menu = menu_bar.addMenu(<span class=\"hljs-string\">'&amp;Edit'<\/span>)\r\n        view_menu = menu_bar.addMenu(<span class=\"hljs-string\">'&amp;View'<\/span>)\r\n        help_menu = menu_bar.addMenu(<span class=\"hljs-string\">'&amp;Help'<\/span>)\r\n\r\n        <span class=\"hljs-comment\"># new menu item<\/span>\r\n        new_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/new.png'<\/span>), <span class=\"hljs-string\">'&amp;New'<\/span>, self)\r\n        new_action.setStatusTip(<span class=\"hljs-string\">'Create a new document'<\/span>)\r\n        new_action.setShortcut(<span class=\"hljs-string\">'Ctrl+N'<\/span>)\r\n        new_action.triggered.connect(self.new_document)\r\n        file_menu.addAction(new_action)\r\n\r\n        <span class=\"hljs-comment\"># open menu item<\/span>\r\n        open_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/open.png'<\/span>), <span class=\"hljs-string\">'&amp;Open...'<\/span>, self)\r\n        open_action.triggered.connect(self.open_document)\r\n        open_action.setStatusTip(<span class=\"hljs-string\">'Open a document'<\/span>)\r\n        open_action.setShortcut(<span class=\"hljs-string\">'Ctrl+O'<\/span>)\r\n        file_menu.addAction(open_action)\r\n\r\n        <span class=\"hljs-comment\"># save menu item<\/span>\r\n        save_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/save.png'<\/span>), <span class=\"hljs-string\">'&amp;Save'<\/span>, self)\r\n        save_action.setStatusTip(<span class=\"hljs-string\">'Save the document'<\/span>)\r\n        save_action.setShortcut(<span class=\"hljs-string\">'Ctrl+S'<\/span>)\r\n        save_action.triggered.connect(self.save_document)\r\n        file_menu.addAction(save_action)\r\n\r\n        file_menu.addSeparator()\r\n\r\n        <span class=\"hljs-comment\"># exit menu item<\/span>\r\n        exit_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/exit.png'<\/span>), <span class=\"hljs-string\">'&amp;Exit'<\/span>, self)\r\n        exit_action.setStatusTip(<span class=\"hljs-string\">'Exit'<\/span>)\r\n        exit_action.setShortcut(<span class=\"hljs-string\">'Alt+F4'<\/span>)\r\n        exit_action.triggered.connect(self.quit)\r\n        file_menu.addAction(exit_action)\r\n\r\n        <span class=\"hljs-comment\"># edit menu<\/span>\r\n        undo_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/undo.png'<\/span>), <span class=\"hljs-string\">'&amp;Undo'<\/span>, self)\r\n        undo_action.setStatusTip(<span class=\"hljs-string\">'Undo'<\/span>)\r\n        undo_action.setShortcut(<span class=\"hljs-string\">'Ctrl+Z'<\/span>)\r\n        undo_action.triggered.connect(self.text_edit.undo)\r\n        edit_menu.addAction(undo_action)\r\n        \r\n        redo_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/redo.png'<\/span>), <span class=\"hljs-string\">'&amp;Redo'<\/span>, self)\r\n        redo_action.setStatusTip(<span class=\"hljs-string\">'Redo'<\/span>)\r\n        redo_action.setShortcut(<span class=\"hljs-string\">'Ctrl+Y'<\/span>)\r\n        redo_action.triggered.connect(self.text_edit.redo)\r\n        edit_menu.addAction(redo_action)\r\n\r\n\r\n        view_search_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/search.png'<\/span>),<span class=\"hljs-string\">'Search'<\/span>,self)\r\n        view_search_action.setStatusTip(<span class=\"hljs-string\">'Show the search dock'<\/span>)\r\n        view_search_action.setShortcut(<span class=\"hljs-string\">'Ctrl+F'<\/span>)\r\n        view_search_action.triggered.connect(self.show_search_dock)\r\n        view_menu.addAction(view_search_action)\r\n\r\n        about_action = QAction(QIcon(<span class=\"hljs-string\">'.\/assets\/about.png'<\/span>), <span class=\"hljs-string\">'About'<\/span>, self)\r\n        help_menu.addAction(about_action)\r\n        about_action.setStatusTip(<span class=\"hljs-string\">'About'<\/span>)\r\n        about_action.setShortcut(<span class=\"hljs-string\">'F1'<\/span>)\r\n\r\n        <span class=\"hljs-comment\"># toolbar<\/span>\r\n        toolbar = QToolBar(<span class=\"hljs-string\">'Main ToolBar'<\/span>)\r\n        self.addToolBar(toolbar)\r\n        toolbar.setIconSize(QSize(<span class=\"hljs-number\">16<\/span>, <span class=\"hljs-number\">16<\/span>))\r\n\r\n        toolbar.addAction(new_action)\r\n        toolbar.addAction(save_action)\r\n        toolbar.addAction(open_action)\r\n        toolbar.addSeparator()\r\n\r\n        toolbar.addAction(undo_action)\r\n        toolbar.addAction(redo_action)\r\n        toolbar.addSeparator()\r\n\r\n        toolbar.addAction(exit_action)\r\n\r\n        <span class=\"hljs-comment\"># status bar<\/span>\r\n        self.status_bar = self.statusBar()\r\n\r\n        <span class=\"hljs-comment\"># display the a message in 5 seconds<\/span>\r\n        self.status_bar.showMessage(<span class=\"hljs-string\">'Ready'<\/span>, <span class=\"hljs-number\">5000<\/span>)\r\n\r\n        <span class=\"hljs-comment\"># add a permanent widget to the status bar<\/span>\r\n        self.character_count = QLabel(<span class=\"hljs-string\">\"Length: 0\"<\/span>)\r\n        self.status_bar.addPermanentWidget(self.character_count)\r\n\r\n        <span class=\"hljs-comment\"># dock widget<\/span>\r\n        self.dock = QDockWidget(<span class=\"hljs-string\">'Search'<\/span>)\r\n        self.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, self.dock)\r\n\r\n        search_form = QWidget()\r\n        layout = QFormLayout(search_form)\r\n        search_form.setLayout(layout)\r\n\r\n        self.search_term = QLineEdit(search_form)\r\n        self.search_term.setPlaceholderText(<span class=\"hljs-string\">\"Enter a search term\"<\/span>)\r\n        layout.addRow(self.search_term)\r\n\r\n        btn_search = QPushButton(<span class=\"hljs-string\">'Go'<\/span>, clicked=self.search)\r\n        layout.addRow(btn_search)\r\n        self.dock.setWidget(search_form)\r\n        self.show()\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">show_search_dock<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        self.dock.show()\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">search<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        term = self.search_term.text()\r\n        <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> term:\r\n            <span class=\"hljs-keyword\">return<\/span>\r\n\r\n        cur = self.text_edit.find(term)\r\n        <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> cur:\r\n            self.status_bar.showMessage(<span class=\"hljs-string\">f'The term \"<span class=\"hljs-subst\">{term}<\/span>\" was not found'<\/span>,<span class=\"hljs-number\">2000<\/span>)\r\n            \r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">set_title<\/span><span class=\"hljs-params\">(self, filename=None)<\/span>:<\/span>\r\n        title = <span class=\"hljs-string\">f\"<span class=\"hljs-subst\">{filename <span class=\"hljs-keyword\">if<\/span> filename <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-string\">'Untitled'<\/span>}<\/span> - <span class=\"hljs-subst\">{self.title}<\/span>\"<\/span>\r\n        self.setWindowTitle(title)\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">confirm_save<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> self.text_edit.document().isModified():\r\n            <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">True<\/span>\r\n\r\n        message = <span class=\"hljs-string\">f\"Do you want to save changes to <span class=\"hljs-subst\">{self.path <span class=\"hljs-keyword\">if<\/span> self.path <span class=\"hljs-keyword\">else<\/span> <span class=\"hljs-string\">'Untitled'<\/span>}<\/span>?\"<\/span>\r\n        MsgBoxBtn = QMessageBox.StandardButton\r\n        MsgBoxBtn = MsgBoxBtn.Save | MsgBoxBtn.Discard | MsgBoxBtn.Cancel\r\n\r\n        button = QMessageBox.question(\r\n            self, self.title, message, buttons=MsgBoxBtn\r\n        )\r\n\r\n        <span class=\"hljs-keyword\">if<\/span> button == MsgBoxBtn.Cancel:\r\n            <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">False<\/span>\r\n\r\n        <span class=\"hljs-keyword\">if<\/span> button == MsgBoxBtn.Save:\r\n            self.save_document()\r\n\r\n        <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">True<\/span>\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">new_document<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        <span class=\"hljs-keyword\">if<\/span> self.confirm_save():\r\n            self.text_edit.clear()\r\n            self.set_title()\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">write_file<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        self.path.write_text(self.text_edit.toPlainText())\r\n        self.statusBar().showMessage(<span class=\"hljs-string\">'The file has been saved...'<\/span>, <span class=\"hljs-number\">3000<\/span>)\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">save_document<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        <span class=\"hljs-comment\"># save the currently openned file<\/span>\r\n        <span class=\"hljs-keyword\">if<\/span> (self.path):\r\n            <span class=\"hljs-keyword\">return<\/span> self.write_file()\r\n\r\n        <span class=\"hljs-comment\"># save a new file<\/span>\r\n        filename, _ = QFileDialog.getSaveFileName(\r\n            self, <span class=\"hljs-string\">'Save File'<\/span>, filter=self.filters\r\n        )\r\n\r\n        <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> filename:\r\n            <span class=\"hljs-keyword\">return<\/span>\r\n\r\n        self.path = Path(filename)\r\n        self.write_file()\r\n        self.set_title(filename)\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">open_document<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        filename, _ = QFileDialog.getOpenFileName(self, filter=self.filters)\r\n        <span class=\"hljs-keyword\">if<\/span> filename:\r\n            self.path = Path(filename)\r\n            self.text_edit.setText(self.path.read_text())\r\n            self.set_title(filename)\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">quit<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        <span class=\"hljs-keyword\">if<\/span> self.confirm_save():\r\n            self.destroy()\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">text_changed<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        text = self.text_edit.toPlainText()\r\n        self.character_count.setText(<span class=\"hljs-string\">f'Length: <span class=\"hljs-subst\">{len(text)}<\/span>'<\/span>)\r\n\r\n\r\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\r\n    <span class=\"hljs-keyword\">try<\/span>:\r\n        <span class=\"hljs-comment\"># show the app icon on the taskbar<\/span>\r\n        <span class=\"hljs-keyword\">import<\/span> ctypes\r\n        myappid = <span class=\"hljs-string\">'yourcompany.yourproduct.subproduct.version'<\/span>\r\n        ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID(myappid)\r\n    <span class=\"hljs-keyword\">finally<\/span>:\r\n        app = QApplication(sys.argv)\r\n        window = MainWindow()\r\n        sys.exit(app.exec())\r\n\r\n\r\n\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, create a dock widget and set its title to &#8216;Search&#8217;:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.dock = QDockWidget(<span class=\"hljs-string\">'Search'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Next, add the dock widget to the left docking widget area:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.addDockWidget(Qt.DockWidgetArea.LeftDockWidgetArea, dock)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, create a search form that will be added to the dock widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">search_form = QWidget()\nlayout = QFormLayout(search_form)\nsearch_form.setLayout(layout)\n\nself.search_term = QLineEdit(search_form)\nself.search_term.setPlaceholderText(<span class=\"hljs-string\">\"Enter a search term\"<\/span>)\nlayout.addRow(self.search_term)\n\nbtn_search = QPushButton(<span class=\"hljs-string\">'Go'<\/span>, clicked=self.search)\nlayout.addRow(btn_search)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>After that, add the search form to the dock widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.dock.setWidget(search_form)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, when the user enters a search term and clicks the Go button, we use the find() method of the QTextEdit to search for the text:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">search<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n    term = self.search_term.text()\r\n    <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> term:\r\n        <span class=\"hljs-keyword\">return<\/span>\r\n\r\n    cur = self.text_edit.find(term)\r\n    <span class=\"hljs-keyword\">if<\/span> <span class=\"hljs-keyword\">not<\/span> cur:\r\n        self.status_bar.showMessage(<span class=\"hljs-string\">f'The term \"<span class=\"hljs-subst\">{term}<\/span>\" was not found'<\/span>,<span class=\"hljs-number\">2000<\/span>)\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>QDockWidget<\/code> class to create a dock widget.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"5252\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qdockwidget\/\"\n\t\t\t\tdata-post-title=\"PyQt QDockWidget\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"5252\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qdockwidget\/\"\n\t\t\t\tdata-post-title=\"PyQt QDockWidget\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PyQt QDockWidget class to create a dock window.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":4862,"menu_order":29,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/5252"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=5252"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/5252\/revisions"}],"predecessor-version":[{"id":5266,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/5252\/revisions\/5266"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4862"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=5252"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}