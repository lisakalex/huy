{"id":1518,"date":"2020-12-07T09:21:54","date_gmt":"2020-12-07T09:21:54","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=1518"},"modified":"2021-11-18T06:32:13","modified_gmt":"2021-11-18T06:32:13","slug":"tkinter-object-oriented-application","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-object-oriented-application\/","title":{"rendered":"Developing a Full Tkinter Object-Oriented Application"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to develop a full Tkinter object-oriented application.<\/p>\n\n\n\n<p>You&#8217;ll convert the <a href=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-example\/\">temperature converter application<\/a> to a new one that uses <a href=\"https:\/\/www.pythontutorial.net\/python-oop\/\">object-oriented programming approach<\/a>:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"302\" height=\"102\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Example.png\" alt=\"\" class=\"wp-image-1500\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Example.png 302w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Example-300x101.png 300w\" sizes=\"(max-width: 302px) 100vw, 302px\" \/><\/figure><\/div>\n\n\n\n<p>First, define a class called <code>TemperatureConverter<\/code>. The class has one <a href=\"https:\/\/www.pythontutorial.net\/python-oop\/python-static-methods\/\">static method<\/a> that converts a temperature from Fahrenheit to Celsius:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\r\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\r\n<span class=\"hljs-keyword\">from<\/span> tkinter.messagebox <span class=\"hljs-keyword\">import<\/span> showerror\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">TemperatureConverter<\/span>:<\/span>\r\n<span class=\"hljs-meta\">    @staticmethod<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">fahrenheit_to_celsius<\/span><span class=\"hljs-params\">(f)<\/span>:<\/span>\r\n        <span class=\"hljs-keyword\">return<\/span> (f - <span class=\"hljs-number\">32<\/span>) * <span class=\"hljs-number\">5<\/span> \/ <span class=\"hljs-number\">9<\/span>\r<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, define a <code>ConverterFrame<\/code> class that inherits from the <code>ttk.Frame<\/code> class. The <code>ConverterFrame<\/code> class will be responsible for creating widgets and handling events:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">ConverterFrame<\/span><span class=\"hljs-params\">(ttk.Frame)<\/span>:<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, container)<\/span>:<\/span>\r\n        super().__init__(container)\r\n        <span class=\"hljs-comment\"># field options<\/span>\r\n        options = {<span class=\"hljs-string\">'padx'<\/span>: <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'pady'<\/span>: <span class=\"hljs-number\">5<\/span>}\r\n\r\n        <span class=\"hljs-comment\"># temperature label<\/span>\r\n        self.temperature_label = ttk.Label(self, text=<span class=\"hljs-string\">'Fahrenheit'<\/span>)\r\n        self.temperature_label.grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">0<\/span>, sticky=tk.W, **options)\r\n\r\n        <span class=\"hljs-comment\"># temperature entry<\/span>\r\n        self.temperature = tk.StringVar()\r\n        self.temperature_entry = ttk.Entry(self, textvariable=self.temperature)\r\n        self.temperature_entry.grid(column=<span class=\"hljs-number\">1<\/span>, row=<span class=\"hljs-number\">0<\/span>, **options)\r\n        self.temperature_entry.focus()\r\n\r\n        self.convert_button = ttk.Button(self, text=<span class=\"hljs-string\">'Convert'<\/span>)\r\n        self.convert_button&#91;<span class=\"hljs-string\">'command'<\/span>] = self.convert\r\n        self.convert_button.grid(column=<span class=\"hljs-number\">2<\/span>, row=<span class=\"hljs-number\">0<\/span>, sticky=tk.W, **options)\r\n\r\n        <span class=\"hljs-comment\"># result label<\/span>\r\n        self.result_label = ttk.Label(self)\r\n        self.result_label.grid(row=<span class=\"hljs-number\">1<\/span>, columnspan=<span class=\"hljs-number\">3<\/span>, **options)\r\n\r\n        <span class=\"hljs-comment\"># add padding to the frame and show it<\/span>\r\n        self.grid(padx=<span class=\"hljs-number\">10<\/span>, pady=<span class=\"hljs-number\">10<\/span>, sticky=tk.NSEW)\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">convert<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        <span class=\"hljs-string\">\"\"\"  Handle button click event\r\n        \"\"\"<\/span>\r\n        <span class=\"hljs-keyword\">try<\/span>:\r\n            f = float(self.temperature.get())\r\n            c = TemperatureConverter.fahrenheit_to_celsius(f)\r\n            result = <span class=\"hljs-string\">f'<span class=\"hljs-subst\">{f}<\/span> Fahrenheit = <span class=\"hljs-subst\">{c:<span class=\"hljs-number\">.2<\/span>f}<\/span> Celsius'<\/span>\r\n            self.result_label.config(text=result)\r\n        <span class=\"hljs-keyword\">except<\/span> ValueError <span class=\"hljs-keyword\">as<\/span> error:\r\n            showerror(title=<span class=\"hljs-string\">'Error'<\/span>, message=error)\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<ul><li>The <code>ConverterFrame<\/code> needs a container, therefore, its <code>__init__()<\/code> method has the <code>container<\/code> argument.<\/li><li>Inside the <code>__init__()<\/code> method of the <code>ConverterCFrame<\/code> class, call the <code>__init__()<\/code> method of its superclass.<\/li><li>Assign the widgets to the <code>self<\/code> object so that you can reference them in other methods of the <code>ConverterFrame<\/code> class.<\/li><li>Assign the <code>command<\/code> option of the <code>convert<\/code> button to the <code>self.convert<\/code> method.<\/li><\/ul>\n\n\n\n<p>Third, define an <code>App<\/code> class that inherits from the <code>tk.Tk<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        super().__init__()\r\n\r\n        self.title(<span class=\"hljs-string\">'Temperature Converter'<\/span>)\r\n        self.geometry(<span class=\"hljs-string\">'300x70'<\/span>)\r\n        self.resizable(<span class=\"hljs-literal\">False<\/span>, <span class=\"hljs-literal\">False<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, bootstrap the application from the <code>if __name__ == \"__main__\"<\/code> block:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">\"__main__\"<\/span>:\r\n    app = App()\r\n    ConverterFrame(app)\r\n    app.mainloop()\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Put it all together:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\r\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\r\n<span class=\"hljs-keyword\">from<\/span> tkinter.messagebox <span class=\"hljs-keyword\">import<\/span> showerror\r\n\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">TemperatureConverter<\/span>:<\/span>\r\n<span class=\"hljs-meta\">    @staticmethod<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">fahrenheit_to_celsius<\/span><span class=\"hljs-params\">(f)<\/span>:<\/span>\r\n        <span class=\"hljs-keyword\">return<\/span> (f - <span class=\"hljs-number\">32<\/span>) * <span class=\"hljs-number\">5<\/span> \/ <span class=\"hljs-number\">9<\/span>\r\n\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">ConverterFrame<\/span><span class=\"hljs-params\">(ttk.Frame)<\/span>:<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, container)<\/span>:<\/span>\r\n        super().__init__(container)\r\n        <span class=\"hljs-comment\"># field options<\/span>\r\n        options = {<span class=\"hljs-string\">'padx'<\/span>: <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'pady'<\/span>: <span class=\"hljs-number\">5<\/span>}\r\n\r\n        <span class=\"hljs-comment\"># temperature label<\/span>\r\n        self.temperature_label = ttk.Label(self, text=<span class=\"hljs-string\">'Fahrenheit'<\/span>)\r\n        self.temperature_label.grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">0<\/span>, sticky=tk.W, **options)\r\n\r\n        <span class=\"hljs-comment\"># temperature entry<\/span>\r\n        self.temperature = tk.StringVar()\r\n        self.temperature_entry = ttk.Entry(self, textvariable=self.temperature)\r\n        self.temperature_entry.grid(column=<span class=\"hljs-number\">1<\/span>, row=<span class=\"hljs-number\">0<\/span>, **options)\r\n        self.temperature_entry.focus()\r\n\r\n        self.convert_button = ttk.Button(self, text=<span class=\"hljs-string\">'Convert'<\/span>)\r\n        self.convert_button&#91;<span class=\"hljs-string\">'command'<\/span>] = self.convert\r\n        self.convert_button.grid(column=<span class=\"hljs-number\">2<\/span>, row=<span class=\"hljs-number\">0<\/span>, sticky=tk.W, **options)\r\n\r\n        <span class=\"hljs-comment\"># result label<\/span>\r\n        self.result_label = ttk.Label(self)\r\n        self.result_label.grid(row=<span class=\"hljs-number\">1<\/span>, columnspan=<span class=\"hljs-number\">3<\/span>, **options)\r\n\r\n        <span class=\"hljs-comment\"># add padding to the frame and show it<\/span>\r\n        self.grid(padx=<span class=\"hljs-number\">10<\/span>, pady=<span class=\"hljs-number\">10<\/span>, sticky=tk.NSEW)\r\n\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">convert<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        <span class=\"hljs-string\">\"\"\"  Handle button click event\r\n        \"\"\"<\/span>\r\n        <span class=\"hljs-keyword\">try<\/span>:\r\n            f = float(self.temperature.get())\r\n            c = TemperatureConverter.fahrenheit_to_celsius(f)\r\n            result = <span class=\"hljs-string\">f'<span class=\"hljs-subst\">{f}<\/span> Fahrenheit = <span class=\"hljs-subst\">{c:<span class=\"hljs-number\">.2<\/span>f}<\/span> Celsius'<\/span>\r\n            self.result_label.config(text=result)\r\n        <span class=\"hljs-keyword\">except<\/span> ValueError <span class=\"hljs-keyword\">as<\/span> error:\r\n            showerror(title=<span class=\"hljs-string\">'Error'<\/span>, message=error)\r\n\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\r\n        super().__init__()\r\n\r\n        self.title(<span class=\"hljs-string\">'Temperature Converter'<\/span>)\r\n        self.geometry(<span class=\"hljs-string\">'300x70'<\/span>)\r\n        self.resizable(<span class=\"hljs-literal\">False<\/span>, <span class=\"hljs-literal\">False<\/span>)\r\n\r\n\r\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">\"__main__\"<\/span>:\r\n    app = App()\r\n    ConverterFrame(app)\r\n    app.mainloop()\r\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this tutorial, you have learned how to develop a full object-oriented Tkinter application.<\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1518\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-object-oriented-application\/\"\n\t\t\t\tdata-post-title=\"Developing a Full Tkinter Object-Oriented Application\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1518\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-object-oriented-application\/\"\n\t\t\t\tdata-post-title=\"Developing a Full Tkinter Object-Oriented Application\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to develop a full Tkinter object-oriented application.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1232,"menu_order":43,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1518"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=1518"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1518\/revisions"}],"predecessor-version":[{"id":2975,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1518\/revisions\/2975"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1232"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=1518"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}