{"id":1247,"date":"2020-11-26T00:08:58","date_gmt":"2020-11-26T00:08:58","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=1247"},"modified":"2021-01-15T02:44:09","modified_gmt":"2021-01-15T02:44:09","slug":"tkinter-label","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-label\/","title":{"rendered":"Tkinter Label"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about Tkinter <code>Label<\/code> widget and how to use it to display a text or image on the screen.<\/p>\n\n\n\n<h2>Introduction to Tkinter Label widget<\/h2>\n\n\n\n<p>Tkinter <code>Label<\/code> widget is used to display a text or image on the screen. To use a <code>Label<\/code> widget, you use the following general syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">label = ttk.Label(container, **options)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>Label<\/code> widget has many options that allow you to customize its appearance:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Options<\/th><th>Meaning<\/th><\/tr><\/thead><tbody><tr><td>anchor<\/td><td>When the text and\/or image are smaller than the width, the anchor option determines where to position them <code>tk.W<\/code>, <code>tk.CENTER<\/code> or <code>tk.E<\/code> for left, center, and right alignment respectively.<\/td><\/tr><tr><td>background<\/td><td>Set the background color for the label<\/td><\/tr><tr><td>borderwidth<\/td><td>Add a border around the label.<\/td><\/tr><tr><td>class_<\/td><td>Specify a custom widget class name for changing the label&#8217;s appearance.<\/td><\/tr><tr><td>compound<\/td><td>Specify how to display both text and image on the Label.<\/td><\/tr><tr><td>cursor<\/td><td>Specify the mouse cursor&#8217;s appearance when the mouse is over the widget.<\/td><\/tr><tr><td>font<\/td><td>Specify the font style for displaying text<\/td><\/tr><tr><td>foreground<\/td><td>Specify the color of the text<\/td><\/tr><tr><td>image<\/td><td>Specify an image or images to show in addition to text or instead of text.<\/td><\/tr><tr><td>justify<\/td><td>If the text contains newline characters, the <code>justify<\/code> option specifies how each line is positioned horizontally. <br>The valid values are <code>tk.LEFT<\/code> (left-justify), <code>tk.CENTER<\/code> (center), and <code>tk.RIGHT<\/code> (right-justify).<\/td><\/tr><tr><td>padding<\/td><td>Add more space around the label.<\/td><\/tr><tr><td>relief<\/td><td>Use this option to create an effect for the Label .e.g, flat,  raised, sunken, groove, and ridge.<\/td><\/tr><tr><td>style<\/td><td>Specify the custom widget style.<\/td><\/tr><tr><td>takefocus<\/td><td>is a boolean value that specifies whether the label is visited during focus traversal. It defaults to False which doesn&#8217;t get focus.<\/td><\/tr><tr><td>text<\/td><td>Specify a string of text to show in the widget<\/td><\/tr><tr><td>textvariable<\/td><td>A StringVar instance that holds the text value of the widget. It overrides the text option if both textvariable and text are available.<\/td><\/tr><tr><td>underline<\/td><td>Specify the position of the letter that should be underlined e.g, underline = 0 would underline the letter <code>E<\/code> in the <code>text='Exit'<\/code><\/td><\/tr><tr><td>width<\/td><td>Specify the number of characters to show<\/td><\/tr><tr><td>wraplength<\/td><td>Chop the text into the lines which less than the length specified by the <code>wraplength<\/code> option.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>The following shows a skeleton program that we&#8217;ll use to illustrate various options of the <code>Label<\/code> widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\nroot = tk.Tk()\nroot.geometry(<span class=\"hljs-string\">'300x200'<\/span>)\nroot.resizable(<span class=\"hljs-literal\">False<\/span>, <span class=\"hljs-literal\">False<\/span>)\nroot.title(<span class=\"hljs-string\">'Label Widget Demo'<\/span>)\n\n<span class=\"hljs-comment\"># show the label here<\/span>\n\nroot.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Displaying a regular label<\/h2>\n\n\n\n<p>The following program shows how to display a regular label on the root window:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter.ttk <span class=\"hljs-keyword\">import<\/span> Label\n\nroot = tk.Tk()\nroot.geometry(<span class=\"hljs-string\">'300x200'<\/span>)\nroot.resizable(<span class=\"hljs-literal\">False<\/span>, <span class=\"hljs-literal\">False<\/span>)\nroot.title(<span class=\"hljs-string\">'Label Widget Demo'<\/span>)\n\n<span class=\"hljs-comment\"># show a label<\/span>\nlabel = Label(root, text=<span class=\"hljs-string\">'This is a label'<\/span>)\nlabel.pack(ipadx=<span class=\"hljs-number\">10<\/span>, ipady=<span class=\"hljs-number\">10<\/span>)\n\nroot.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"300\" height=\"230\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/11\/Tkinter-Label-Regular-Label-Widget.png\" alt=\"\" class=\"wp-image-1248\"\/><\/figure><\/div>\n\n\n\n<p>How it works.<\/p>\n\n\n\n<ul><li>First, import <code>Label<\/code> class from the <code>tkinter.ttk<\/code> module.<\/li><li>Second, create the root window and set its properties including size, resizeable, and title.<\/li><li>Third, create a new instance of the Label widget, set its container to the root window, and assign a literal string to its <code>text<\/code> property.<\/li><\/ul>\n\n\n\n<h2>Setting a specific font for the Label<\/h2>\n\n\n\n<p>To set a particular font for a label, you pass the <code>font<\/code> <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-keyword-arguments\/\">keyword argument<\/a> to the <code>Label<\/code> constructor like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">font = (<span class=\"hljs-string\">'font name'<\/span>, font_size)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>font<\/code> keyword argument is a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-tuples\/\">tuple<\/a> that contains font name and size. For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">font=(<span class=\"hljs-string\">\"Helvetica\"<\/span>, <span class=\"hljs-number\">14<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example shows a label with the <code>Helvetica<\/code> font:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\n\nroot = tk.Tk()\nroot.geometry(<span class=\"hljs-string\">'300x200'<\/span>)\nroot.resizable(<span class=\"hljs-literal\">False<\/span>, <span class=\"hljs-literal\">False<\/span>)\nroot.title(<span class=\"hljs-string\">'Label Widget Demo'<\/span>)\n\n<span class=\"hljs-comment\"># label with a specific font<\/span>\nlabel = ttk.Label(\n    root,\n    text=<span class=\"hljs-string\">'A Label with the Helvetica font'<\/span>,\n    font=(<span class=\"hljs-string\">\"Helvetica\"<\/span>, <span class=\"hljs-number\">14<\/span>))\n\nlabel.pack(ipadx=<span class=\"hljs-number\">10<\/span>, ipady=<span class=\"hljs-number\">10<\/span>)\n\nroot.mainloop()\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"300\" height=\"230\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/11\/Tkinter-Label-Label-with-font.png\" alt=\"\" class=\"wp-image-1249\"\/><\/figure><\/div>\n\n\n\n<h2>Displaying an image<\/h2>\n\n\n\n<p>To use a <code>Label<\/code> widget to display an image, you follow these steps:<\/p>\n\n\n\n<p>First, create a <a href=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-photoimage\/\">PhotoImage<\/a> widget by passing the path to the photo to the <code>PhotoImage<\/code> constructor:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">photo = tk.PhotoImage(file=<span class=\"hljs-string\">'.\/assets\/python.png'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, assign the <code>PhotoImage<\/code> object to the <code>image<\/code> option of the <code>Label<\/code> widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">Label(..., image=photo)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example shows how to use a <code>Label<\/code> widget to display an image:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\n<span class=\"hljs-comment\"># create the root window<\/span>\nroot = tk.Tk()\nroot.geometry(<span class=\"hljs-string\">'300x200'<\/span>)\nroot.resizable(<span class=\"hljs-literal\">False<\/span>, <span class=\"hljs-literal\">False<\/span>)\nroot.title(<span class=\"hljs-string\">'Label Widget Image'<\/span>)\n\n<span class=\"hljs-comment\"># display an image label<\/span>\nphoto = tk.PhotoImage(file=<span class=\"hljs-string\">'.\/assets\/python.png'<\/span>)\nimage_label = ttk.Label(\n    root,\n    image=photo,\n    padding=<span class=\"hljs-number\">5<\/span>\n)\nimage_label.pack()\n\nroot.mainloop()\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"300\" height=\"230\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/11\/Tkinter-Label-Label-Image.png\" alt=\"\" class=\"wp-image-1250\"\/><\/figure><\/div>\n\n\n\n<p>Note that the image file is located at the <code>\/assets\/<\/code> folder.<\/p>\n\n\n\n<p>To display both text and image, you&#8217;ll use the <code>text<\/code> attribute and <code>compound<\/code> option.<\/p>\n\n\n\n<p>The <code>compound<\/code> option specifies the position of the image relative to the text. Its valid values are:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Compound<\/th><th>Effect<\/th><\/tr><\/thead><tbody><tr><td><code>'top'<\/code><\/td><td>Display the image above the text.<\/td><\/tr><tr><td><code>'bottom'<\/code><\/td><td>Display the image below the text.<\/td><\/tr><tr><td><code>'left'<\/code><\/td><td>Display the image to the left of the text.<\/td><\/tr><tr><td><code>'right'<\/code><\/td><td>Display the image to the right of the text.<\/td><\/tr><tr><td><code>'none'<\/code><\/td><td>Display the image if there&#8217;s one, otherwise display the text. The compound option defaults to <code>'none'<\/code>.<\/td><\/tr><tr><td><code>'text'<\/code><\/td><td>Display the text, not the image<\/td><\/tr><tr><td><code>'image'<\/code><\/td><td>Display the image, not the text.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p>The following program shows how to display both text and image on a label:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">import tkinter <span class=\"hljs-keyword\">as<\/span> tk\nfrom tkinter import ttk\n\n<span class=\"hljs-comment\"># create the root window<\/span>\nroot = tk.Tk()\nroot.geometry(<span class=\"hljs-string\">'300x200'<\/span>)\nroot.resizable(<span class=\"hljs-keyword\">False<\/span>, <span class=\"hljs-keyword\">False<\/span>)\nroot.title(<span class=\"hljs-string\">'Label Widget Image'<\/span>)\n\n<span class=\"hljs-comment\"># display an image label<\/span>\nphoto = tk.PhotoImage(file=<span class=\"hljs-string\">'.\/assets\/python.png'<\/span>)\nimage_label = ttk.Label(\n    root,\n    image=photo,\n    text=<span class=\"hljs-string\">'Python'<\/span>,\n    compound=<span class=\"hljs-string\">'top'<\/span>\n)\nimage_label.pack()\n\nroot.mainloop()\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"302\" height=\"232\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Label-Label-Image-with-text.png\" alt=\"\" class=\"wp-image-1448\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Label-Label-Image-with-text.png 302w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Label-Label-Image-with-text-300x230.png 300w\" sizes=\"(max-width: 302px) 100vw, 302px\" \/><\/figure><\/div>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the Label widget to display a text or an image or both.<\/li><\/ul>\n\n\n\n<p><\/p>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1247\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-label\/\"\n\t\t\t\tdata-post-title=\"Tkinter Label\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1247\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-label\/\"\n\t\t\t\tdata-post-title=\"Tkinter Label\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about Tkinter Label widget and how to use it to display a text or image on the screen.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1232,"menu_order":6,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1247"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=1247"}],"version-history":[{"count":4,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1247\/revisions"}],"predecessor-version":[{"id":2224,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1247\/revisions\/2224"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1232"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=1247"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}