{"id":4999,"date":"2022-09-21T04:20:03","date_gmt":"2022-09-21T04:20:03","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=4999"},"modified":"2022-10-29T07:53:38","modified_gmt":"2022-10-29T07:53:38","slug":"pyqt-qcombobox","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qcombobox\/","title":{"rendered":"PyQt QComboBox"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PyQt <code>QComboBox<\/code> to create a combobox widget.<\/p>\n\n\n\n<h2>Introduction to the PyQt QComboBox<\/h2>\n\n\n\n<p>A combobox provides you with a list of options so that you can select one of them. A combobox is also known as a dropdown or select widget.<\/p>\n\n\n\n<p>To create a combobox, you use the <code>QComboBox<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">combobox = QCombobBox(self)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>After creating a combobox, you need to populate its options by using:<\/p>\n\n\n\n<ul><li><code>addItem()<\/code> &#8211; takes a string label and a data value and appends it to the end of the list.<\/li><li><code>insertItem()<\/code> &#8211; works like the <code>addItem()<\/code> method except that it takes an index for the first argument and adds the item at that index to the list.<\/li><\/ul>\n\n\n\n<p>Also, you can pass a list of options to the <code>addItems()<\/code> or <code>insertItems()<\/code> method at once.<\/p>\n\n\n\n<p>To get the currently selected items, you can use one of the following methods:<\/p>\n\n\n\n<ul><li><code>currentData()<\/code> &#8211; returns the currently selected item.<\/li><li><code>currentIndex()<\/code> &#8211; returns the index of the currently selected item.<\/li><li><code>currentText()<\/code> &#8211; returns the text of the currently selected item.<\/li><\/ul>\n\n\n\n<p>Optionally, a combobox allows you to enter text if you set its editable property to <code>True<\/code>. <\/p>\n\n\n\n<p>The <code>insertPolicy<\/code> property allows you to set whether the combobox should insert entered items in the list.<\/p>\n\n\n\n<h2>PyQt QComboBox example<\/h2>\n\n\n\n<p>The following example uses the <code>QCombobox<\/code> class to create a combobox:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QRadioButton, QLabel, QVBoxLayout, QComboBox\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtCore <span class=\"hljs-keyword\">import<\/span> Qt\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n        super().__init__(*args, **kwargs)\n\n        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QComboBox'<\/span>)\n        self.setMinimumWidth(<span class=\"hljs-number\">300<\/span>)\n\n        <span class=\"hljs-comment\"># create a grid layout<\/span>\n        layout = QVBoxLayout()\n        self.setLayout(layout)\n\n        cb_label = QLabel(<span class=\"hljs-string\">'Please select a platform:'<\/span>, self)\n\n        <span class=\"hljs-comment\"># create a combobox<\/span>\n        self.cb_platform = QComboBox(self)\n        self.cb_platform.addItem(<span class=\"hljs-string\">'Android'<\/span>)\n        self.cb_platform.addItem(<span class=\"hljs-string\">'iOS'<\/span>)\n        self.cb_platform.addItem(<span class=\"hljs-string\">'Windows'<\/span>)\n\n        self.cb_platform.activated.connect(self.update)\n\n        self.result_label = QLabel(<span class=\"hljs-string\">''<\/span>, self)\n\n        layout.addWidget(cb_label)\n        layout.addWidget(self.cb_platform)\n        layout.addWidget(self.result_label)\n\n        <span class=\"hljs-comment\"># show the window<\/span>\n        self.show()\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">update<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        self.result_label.setText(\n            <span class=\"hljs-string\">f'You selected <span class=\"hljs-subst\">{self.cb_platform.currentText()}<\/span>'<\/span>)\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    sys.exit(app.exec())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"452\" height=\"177\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QComboBox.png\" alt=\"\" class=\"wp-image-5003\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QComboBox.png 452w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QComboBox-300x117.png 300w\" sizes=\"(max-width: 452px) 100vw, 452px\" \/><\/figure>\n\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, create a combobox widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.cb_platform = QComboBox(self)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, populate items by using the <code>addItem()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.cb_platform.addItem(<span class=\"hljs-string\">'Android'<\/span>)\nself.cb_platform.addItem(<span class=\"hljs-string\">'iOS'<\/span>)\nself.cb_platform.addItem(<span class=\"hljs-string\">'Windows'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, connect the activated signal to the <code><code>self.update<\/code>()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.cb_platform.activated.connect(self.update)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The combobox emits the activated signal when you change the item of the combobox.<\/p>\n\n\n\n<p>Finally, define the <code>update()<\/code> method that updates the text of the <code>result_label<\/code> to the selected item of the combobox. <\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">update<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n    self.result_label.setText(\n        <span class=\"hljs-string\">f'You selected <span class=\"hljs-subst\">{self.cb_platform.currentText()}<\/span>'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that we use the <code>currentText()<\/code> method to get the text of the currently selected item.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use PyQt <code>QComboBox<\/code> to create a combobox.<\/li><li>Use <code>addItem()<\/code> or <code>insertItem()<\/code> to add an item to the list of the combobox.<\/li><li>Connect to the <code>activated<\/code> signal to trigger an action when the selected item of a combobox changes.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4999\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qcombobox\/\"\n\t\t\t\tdata-post-title=\"PyQt QComboBox\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4999\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qcombobox\/\"\n\t\t\t\tdata-post-title=\"PyQt QComboBox\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the PyQt QComboBox to create a combobox widget. Introduction to the PyQt QComboBox A combobox provides you with a list of options so that you can select one of them. A combobox is also known as a dropdown or select widget. To create a combobox, you [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":4862,"menu_order":11,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4999"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=4999"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4999\/revisions"}],"predecessor-version":[{"id":5467,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4999\/revisions\/5467"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4862"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=4999"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}