{"id":1546,"date":"2020-12-09T03:58:14","date_gmt":"2020-12-09T03:58:14","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=1546"},"modified":"2022-08-05T12:16:45","modified_gmt":"2022-08-05T12:16:45","slug":"tkinter-treeview","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-treeview\/","title":{"rendered":"Tkinter Treeview"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the Tkinter Treeview widget and how to use it to display both tabular and hierarchical data.<\/p>\n\n\n\n<h2>Introduction to the Tkinter Treeview widget<\/h2>\n\n\n\n<p>A Treeview widget allows you to display data in both tabular and hierarchical structures. To create a Treeview widget, you use the <code>ttk.Treeview<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree = ttk.Treeview(container, **options)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>A Treeview widget holds a list of items. Each item has one or more columns.<\/p>\n\n\n\n<p>The first column may contain text and an icon that indicates whether it can be expansible or not. The remaining columns contain values of each row.<\/p>\n\n\n\n<p>The first row of the Treeview consists of headings that identify each column by a name.<\/p>\n\n\n\n<h2>Using Tkinter Treeview to display tabular data<\/h2>\n\n\n\n<p>The following program shows how to use the Treeview widget to display tabular data:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n<span class=\"hljs-keyword\">from<\/span> tkinter.messagebox <span class=\"hljs-keyword\">import<\/span> showinfo\n\nroot = tk.Tk()\nroot.title(<span class=\"hljs-string\">'Treeview demo'<\/span>)\nroot.geometry(<span class=\"hljs-string\">'620x200'<\/span>)\n\n<span class=\"hljs-comment\"># define columns<\/span>\ncolumns = (<span class=\"hljs-string\">'first_name'<\/span>, <span class=\"hljs-string\">'last_name'<\/span>, <span class=\"hljs-string\">'email'<\/span>)\n\ntree = ttk.Treeview(root, columns=columns, show=<span class=\"hljs-string\">'headings'<\/span>)\n\n<span class=\"hljs-comment\"># define headings<\/span>\ntree.heading(<span class=\"hljs-string\">'first_name'<\/span>, text=<span class=\"hljs-string\">'First Name'<\/span>)\ntree.heading(<span class=\"hljs-string\">'last_name'<\/span>, text=<span class=\"hljs-string\">'Last Name'<\/span>)\ntree.heading(<span class=\"hljs-string\">'email'<\/span>, text=<span class=\"hljs-string\">'Email'<\/span>)\n\n<span class=\"hljs-comment\"># generate sample data<\/span>\ncontacts = &#91;]\n<span class=\"hljs-keyword\">for<\/span> n <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">100<\/span>):\n    contacts.append((<span class=\"hljs-string\">f'first <span class=\"hljs-subst\">{n}<\/span>'<\/span>, <span class=\"hljs-string\">f'last <span class=\"hljs-subst\">{n}<\/span>'<\/span>, <span class=\"hljs-string\">f'email<span class=\"hljs-subst\">{n}<\/span>@example.com'<\/span>))\n\n<span class=\"hljs-comment\"># add data to the treeview<\/span>\n<span class=\"hljs-keyword\">for<\/span> contact <span class=\"hljs-keyword\">in<\/span> contacts:\n    tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=contact)\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">item_selected<\/span><span class=\"hljs-params\">(event)<\/span>:<\/span>\n    <span class=\"hljs-keyword\">for<\/span> selected_item <span class=\"hljs-keyword\">in<\/span> tree.selection():\n        item = tree.item(selected_item)\n        record = item&#91;<span class=\"hljs-string\">'values'<\/span>]\n        <span class=\"hljs-comment\"># show a message<\/span>\n        showinfo(title=<span class=\"hljs-string\">'Information'<\/span>, message=<span class=\"hljs-string\">','<\/span>.join(record))\n\n\ntree.bind(<span class=\"hljs-string\">'&lt;&lt;TreeviewSelect&gt;&gt;'<\/span>, item_selected)\n\ntree.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">0<\/span>, sticky=<span class=\"hljs-string\">'nsew'<\/span>)\n\n<span class=\"hljs-comment\"># add a scrollbar<\/span>\nscrollbar = ttk.Scrollbar(root, orient=tk.VERTICAL, command=tree.yview)\ntree.configure(yscroll=scrollbar.set)\nscrollbar.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">1<\/span>, sticky=<span class=\"hljs-string\">'ns'<\/span>)\n\n<span class=\"hljs-comment\"># run the app<\/span>\nroot.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"622\" height=\"232\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Treeview-Tabular-Data.png\" alt=\"\" class=\"wp-image-1548\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Treeview-Tabular-Data.png 622w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Treeview-Tabular-Data-300x112.png 300w\" sizes=\"(max-width: 622px) 100vw, 622px\" \/><\/figure><\/div>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, import <code>tkinter<\/code> module, <code>ttk<\/code> submodule, and the <code>showinfo<\/code> from <code>tkinter.messagebox<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n<span class=\"hljs-keyword\">from<\/span> tkinter.messagebox <span class=\"hljs-keyword\">import<\/span> showinfo<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create the root window, set its title and size:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">root = tk.Tk()\nroot.title(<span class=\"hljs-string\">'Treeview demo'<\/span>)\nroot.geometry(<span class=\"hljs-string\">'620x200'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, define identifiers for columns:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">columns = (<span class=\"hljs-string\">'first_name'<\/span>, <span class=\"hljs-string\">'last_name'<\/span>, <span class=\"hljs-string\">'email'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Fourth, create a Tkinter&#8217;s Treeview widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree = ttk.Treeview(root, columns=columns, show=<span class=\"hljs-string\">'headings'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this code, we passed the columns to the <code>columns<\/code> option. The <code>show='heading'<\/code> hides the first column (column <code>#0<\/code>) of the Treeview.<\/p>\n\n\n\n<p>The <code>show<\/code> option accepts one of the following values:<\/p>\n\n\n\n<ul><li><code>'tree'<\/code> &#8211; shows the column <code>#0<\/code>.<\/li><li><code>'heading'<\/code> &#8211; shows the header row.<\/li><li><code>'tree headings'<\/code> &#8211; shows both column <code>#0<\/code> and the header row. This is the default value.<\/li><li><code>''<\/code> &#8211; doesn&#8217;t show the column <code>#0<\/code> or the header row.<\/li><\/ul>\n\n\n\n<p>Fifth, specify the headings for the columns:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree.heading(<span class=\"hljs-string\">'first_name'<\/span>, text=<span class=\"hljs-string\">'First Name'<\/span>)\ntree.heading(<span class=\"hljs-string\">'last_name'<\/span>, text=<span class=\"hljs-string\">'Last Name'<\/span>)\ntree.heading(<span class=\"hljs-string\">'email'<\/span>, text=<span class=\"hljs-string\">'Email'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Sixth, generate a list of tuples for displaying on the Treeview:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">contacts = &#91;]\n<span class=\"hljs-keyword\">for<\/span> n <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">100<\/span>):\n    contacts.append((<span class=\"hljs-string\">f'first <span class=\"hljs-subst\">{n}<\/span>'<\/span>, <span class=\"hljs-string\">f'last <span class=\"hljs-subst\">{n}<\/span>'<\/span>, <span class=\"hljs-string\">f'email<span class=\"hljs-subst\">{n}<\/span>@example.com'<\/span>))<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Seventh, create new items, one by one, by using the <code>insert()<\/code> method of the Treeview widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> contact <span class=\"hljs-keyword\">in<\/span> contacts:\n    tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=contact)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Eight, define a function to handle the <code>&lt;&gt;<\/code> event. When you select one or more items, the program will show a message box:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">item_selected<\/span><span class=\"hljs-params\">(event)<\/span>:<\/span>\n    <span class=\"hljs-keyword\">for<\/span> selected_item <span class=\"hljs-keyword\">in<\/span> tree.selection():\n        item = tree.item(selected_item)\n        record = item&#91;<span class=\"hljs-string\">'values'<\/span>]\n        <span class=\"hljs-comment\"># show a message<\/span>\n        showinfo(title=<span class=\"hljs-string\">'Information'<\/span>, message=<span class=\"hljs-string\">','<\/span>.join(record))\n\ntree.bind(<span class=\"hljs-string\">'&lt;&lt;TreeviewSelect&gt;&gt;'<\/span>, item_selected)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Ninth, place the Treeview widget on the root window:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">0<\/span>, sticky=<span class=\"hljs-string\">'nsew'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Tenth, <a href=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-scrollbar\/\">add a vertical scrollbar<\/a> to the Treeview widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-comment\"># add a scrollbar<\/span>\nscrollbar = ttk.Scrollbar(root, orient=tk.VERTICAL, command=tree.yview)\ntree.configure(yscroll=scrollbar.set)\nscrollbar.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">1<\/span>, sticky=<span class=\"hljs-string\">'ns'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, display the root window:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">root.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following program also uses the Treeview widget in the <a href=\"https:\/\/www.pythontutorial.net\/python-oop\/\">object-oriented programming<\/a> approach:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n<span class=\"hljs-keyword\">from<\/span> tkinter.messagebox <span class=\"hljs-keyword\">import<\/span> showinfo\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        super().__init__()\n\n        self.title(<span class=\"hljs-string\">'Treeview demo'<\/span>)\n        self.geometry(<span class=\"hljs-string\">'620x200'<\/span>)\n\n        self.tree = self.create_tree_widget()\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">create_tree_widget<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        columns = (<span class=\"hljs-string\">'first_name'<\/span>, <span class=\"hljs-string\">'last_name'<\/span>, <span class=\"hljs-string\">'email'<\/span>)\n        tree = ttk.Treeview(self, columns=columns, show=<span class=\"hljs-string\">'headings'<\/span>)\n\n        <span class=\"hljs-comment\"># define headings<\/span>\n        tree.heading(<span class=\"hljs-string\">'first_name'<\/span>, text=<span class=\"hljs-string\">'First Name'<\/span>)\n        tree.heading(<span class=\"hljs-string\">'last_name'<\/span>, text=<span class=\"hljs-string\">'Last Name'<\/span>)\n        tree.heading(<span class=\"hljs-string\">'email'<\/span>, text=<span class=\"hljs-string\">'Email'<\/span>)\n\n        tree.bind(<span class=\"hljs-string\">'&lt;&lt;TreeviewSelect&gt;&gt;'<\/span>, self.item_selected)\n        tree.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">0<\/span>, sticky=tk.NSEW)\n\n        <span class=\"hljs-comment\"># add a scrollbar<\/span>\n        scrollbar = ttk.Scrollbar(self, orient=tk.VERTICAL, command=tree.yview)\n        tree.configure(yscroll=scrollbar.set)\n        scrollbar.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">1<\/span>, sticky=<span class=\"hljs-string\">'ns'<\/span>)\n\n        <span class=\"hljs-comment\"># generate sample data<\/span>\n        contacts = &#91;]\n        <span class=\"hljs-keyword\">for<\/span> n <span class=\"hljs-keyword\">in<\/span> range(<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">100<\/span>):\n            contacts.append((<span class=\"hljs-string\">f'first <span class=\"hljs-subst\">{n}<\/span>'<\/span>, <span class=\"hljs-string\">f'last <span class=\"hljs-subst\">{n}<\/span>'<\/span>, <span class=\"hljs-string\">f'email<span class=\"hljs-subst\">{n}<\/span>@example.com'<\/span>))\n\n        <span class=\"hljs-comment\"># add data to the treeview<\/span>\n        <span class=\"hljs-keyword\">for<\/span> contact <span class=\"hljs-keyword\">in<\/span> contacts:\n            tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=contact)\n\n        <span class=\"hljs-keyword\">return<\/span> tree\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">item_selected<\/span><span class=\"hljs-params\">(self, event)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">for<\/span> selected_item <span class=\"hljs-keyword\">in<\/span> self.tree.selection():\n            item = self.tree.item(selected_item)\n            record = item&#91;<span class=\"hljs-string\">'values'<\/span>]\n            <span class=\"hljs-comment\"># show a message<\/span>\n            showinfo(title=<span class=\"hljs-string\">'Information'<\/span>, message=<span class=\"hljs-string\">','<\/span>.join(record))\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = App()\n    app.mainloop()\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Adding an item to the Treeview widget<\/h3>\n\n\n\n<p>To add an item (or a row) to a Treeview widget, you use the <code>insert()<\/code> method of the <code>Treeview<\/code> widget object. The following example adds an item at the end of the item list:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=contact)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To add an item at the beginning of the list, you use zero (<code>0<\/code>) instead of <code>tk.END<\/code> constant:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-16\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree.insert(<span class=\"hljs-string\">''<\/span>, <span class=\"hljs-number\">0<\/span>, values=contact)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-16\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following program illustrates how to add items to the Treeview:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-17\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        super().__init__()\n\n        self.title(<span class=\"hljs-string\">'Treeview demo'<\/span>)\n        self.geometry(<span class=\"hljs-string\">'620x200'<\/span>)\n\n        self.tree = self.create_tree_widget()\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">create_tree_widget<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        columns = (<span class=\"hljs-string\">'first_name'<\/span>, <span class=\"hljs-string\">'last_name'<\/span>, <span class=\"hljs-string\">'email'<\/span>)\n        tree = ttk.Treeview(self, columns=columns, show=<span class=\"hljs-string\">'headings'<\/span>)\n\n        <span class=\"hljs-comment\"># define headings<\/span>\n        tree.heading(<span class=\"hljs-string\">'first_name'<\/span>, text=<span class=\"hljs-string\">'First Name'<\/span>)\n        tree.heading(<span class=\"hljs-string\">'last_name'<\/span>, text=<span class=\"hljs-string\">'Last Name'<\/span>)\n        tree.heading(<span class=\"hljs-string\">'email'<\/span>, text=<span class=\"hljs-string\">'Email'<\/span>)\n\n        tree.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">0<\/span>, sticky=tk.NSEW)\n\n        <span class=\"hljs-comment\"># adding an item<\/span>\n        tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>, <span class=\"hljs-string\">'john.doe@email.com'<\/span>))\n\n        <span class=\"hljs-comment\"># insert a the end<\/span>\n        tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=(<span class=\"hljs-string\">'Jane'<\/span>, <span class=\"hljs-string\">'Miller'<\/span>, <span class=\"hljs-string\">'jane.miller@email.com'<\/span>))\n\n        <span class=\"hljs-comment\"># insert at the beginning<\/span>\n        tree.insert(<span class=\"hljs-string\">''<\/span>, <span class=\"hljs-number\">0<\/span>, values=(<span class=\"hljs-string\">'Alice'<\/span>, <span class=\"hljs-string\">'Garcia'<\/span>, <span class=\"hljs-string\">'alice.garcia@email.com'<\/span>))\n\n        <span class=\"hljs-keyword\">return<\/span> tree\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = App()\n    app.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-17\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Deleting items from a Treeview<\/h3>\n\n\n\n<p>To delete an item from Treeview, you use the delete() method of the Treeview object. The following program shows a Treeview with some items. Clicking an item will delete it from the tree:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-18\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        super().__init__()\n\n        self.title(<span class=\"hljs-string\">'Treeview demo'<\/span>)\n        self.geometry(<span class=\"hljs-string\">'620x200'<\/span>)\n\n        self.tree = self.create_tree_widget()\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">create_tree_widget<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        columns = (<span class=\"hljs-string\">'first_name'<\/span>, <span class=\"hljs-string\">'last_name'<\/span>, <span class=\"hljs-string\">'email'<\/span>)\n        tree = ttk.Treeview(self, columns=columns, show=<span class=\"hljs-string\">'headings'<\/span>)\n\n        <span class=\"hljs-comment\"># define headings<\/span>\n        tree.heading(<span class=\"hljs-string\">'first_name'<\/span>, text=<span class=\"hljs-string\">'First Name'<\/span>)\n        tree.heading(<span class=\"hljs-string\">'last_name'<\/span>, text=<span class=\"hljs-string\">'Last Name'<\/span>)\n        tree.heading(<span class=\"hljs-string\">'email'<\/span>, text=<span class=\"hljs-string\">'Email'<\/span>)\n\n        tree.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">0<\/span>, sticky=tk.NSEW)\n\n        <span class=\"hljs-comment\"># adding an item<\/span>\n        tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=(<span class=\"hljs-string\">'John'<\/span>, <span class=\"hljs-string\">'Doe'<\/span>, <span class=\"hljs-string\">'john.doe@email.com'<\/span>))\n\n        <span class=\"hljs-comment\"># insert a the end<\/span>\n        tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, values=(<span class=\"hljs-string\">'Jane'<\/span>, <span class=\"hljs-string\">'Miller'<\/span>, <span class=\"hljs-string\">'jane.miller@email.com'<\/span>))\n\n        <span class=\"hljs-comment\"># insert at the beginning<\/span>\n        tree.insert(<span class=\"hljs-string\">''<\/span>, <span class=\"hljs-number\">0<\/span>, values=(<span class=\"hljs-string\">'Alice'<\/span>, <span class=\"hljs-string\">'Garcia'<\/span>, <span class=\"hljs-string\">'alice.garcia@email.com'<\/span>))\n\n        tree.bind(<span class=\"hljs-string\">'&lt;&lt;TreeviewSelect&gt;&gt;'<\/span>, self.item_selected)\n\n        <span class=\"hljs-keyword\">return<\/span> tree\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">item_selected<\/span><span class=\"hljs-params\">(self, event)<\/span>:<\/span>\n        <span class=\"hljs-keyword\">for<\/span> selected_item <span class=\"hljs-keyword\">in<\/span> self.tree.selection():\n            self.tree.delete(selected_item)\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = App()\n    app.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-18\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this program.<\/p>\n\n\n\n<p>First, bind the item selected event:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-19\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree.bind(<span class=\"hljs-string\">'&lt;&lt;TreeviewSelect&gt;&gt;'<\/span>, self.item_selected)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-19\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, delete the selected item from the tree. To get the selected item, you use the <code>selection()<\/code> method of the <code>Treeview<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-20\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">item_selected<\/span><span class=\"hljs-params\">(self, event)<\/span>:<\/span>\n    <span class=\"hljs-keyword\">for<\/span> selected_item <span class=\"hljs-keyword\">in<\/span> self.tree.selection():\n        self.tree.delete(selected_item)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-20\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Customizing columns<\/h3>\n\n\n\n<p>To change the size of a column and anchor of the item, you can use the column() method of the Treeview object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-21\" data-shcb-language-name=\"CSS\" data-shcb-language-slug=\"css\"><span><code class=\"hljs language-css\">\n<span class=\"hljs-selector-tag\">tree<\/span><span class=\"hljs-selector-class\">.column<\/span>(<span class=\"hljs-selector-tag\">size<\/span>, <span class=\"hljs-selector-tag\">width<\/span>, <span class=\"hljs-selector-tag\">anchor<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-21\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">CSS<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">css<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example sets the width for the first name and last name column to 100 and the email to 200. It also set the anchor for the item in each column accordingly:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-22\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">tree.column(<span class=\"hljs-string\">'first_name'<\/span>, width=<span class=\"hljs-number\">100<\/span>, anchor=tk.W)\ntree.column(<span class=\"hljs-string\">'last_name'<\/span>, width=<span class=\"hljs-number\">100<\/span>, anchor=tk.W)\ntree.column(<span class=\"hljs-string\">'email'<\/span>, width=<span class=\"hljs-number\">200<\/span>, anchor=tk.CENTER)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-22\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Using Tkinter Treeview to display hierarchical data<\/h2>\n\n\n\n<p>The following program illustrates how to use the TreeView widget to display hierarchical data:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-23\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\r\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\r\n<span class=\"hljs-keyword\">from<\/span> tkinter.messagebox <span class=\"hljs-keyword\">import<\/span> showinfo\r\n\r\n<span class=\"hljs-comment\"># create root window<\/span>\r\nroot = tk.Tk()\r\nroot.title(<span class=\"hljs-string\">'Treeview Demo - Hierarchical Data'<\/span>)\r\nroot.geometry(<span class=\"hljs-string\">'400x200'<\/span>)\r\n\r\n<span class=\"hljs-comment\"># configure the grid layout<\/span>\r\nroot.rowconfigure(<span class=\"hljs-number\">0<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\r\nroot.columnconfigure(<span class=\"hljs-number\">0<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\r\n\r\n\r\n<span class=\"hljs-comment\"># create a treeview<\/span>\r\ntree = ttk.Treeview(root)\r\ntree.heading(<span class=\"hljs-string\">'#0'<\/span>, text=<span class=\"hljs-string\">'Departments'<\/span>, anchor=tk.W)\r\n\r\n\r\n<span class=\"hljs-comment\"># adding data<\/span>\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Administration'<\/span>, iid=<span class=\"hljs-number\">0<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Logistics'<\/span>, iid=<span class=\"hljs-number\">1<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Sales'<\/span>, iid=<span class=\"hljs-number\">2<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Finance'<\/span>, iid=<span class=\"hljs-number\">3<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'IT'<\/span>, iid=<span class=\"hljs-number\">4<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\n\r\n<span class=\"hljs-comment\"># adding children of first node<\/span>\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'John Doe'<\/span>, iid=<span class=\"hljs-number\">5<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Jane Doe'<\/span>, iid=<span class=\"hljs-number\">6<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\r\ntree.move(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">0<\/span>)\r\ntree.move(<span class=\"hljs-number\">6<\/span>, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span>)\r\n\r\n<span class=\"hljs-comment\"># place the Treeview widget on the root window<\/span>\r\ntree.grid(row=<span class=\"hljs-number\">0<\/span>, column=<span class=\"hljs-number\">0<\/span>, sticky=tk.NSEW)\r\n\r\n<span class=\"hljs-comment\"># run the app<\/span>\r\nroot.mainloop()\r<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-23\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"400\" height=\"230\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Treeview-Hierarchical-Data.png\" alt=\"\" class=\"wp-image-1549\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Treeview-Hierarchical-Data.png 400w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2020\/12\/Tkinter-Treeview-Hierarchical-Data-300x173.png 300w\" sizes=\"(max-width: 400px) 100vw, 400px\" \/><\/figure><\/div>\n\n\n<p>How it works.<\/p>\n\n\n\n<p>We&#8217;ll focus on the Treeview widget part.<\/p>\n\n\n\n<p>First, create a Treeview widget and set its heading.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-24\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree = ttk.Treeview(root)\ntree.heading(<span class=\"hljs-string\">'#0'<\/span>, text=<span class=\"hljs-string\">'Departments'<\/span>, anchor=tk.W)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-24\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>This Treeview widget has only one column.<\/p>\n\n\n\n<p>Second, add items to the TreeView widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-25\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">tree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Administration'<\/span>, iid=<span class=\"hljs-number\">0<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Logistics'<\/span>, iid=<span class=\"hljs-number\">1<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Sales'<\/span>, iid=<span class=\"hljs-number\">2<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Finance'<\/span>, iid=<span class=\"hljs-number\">3<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'IT'<\/span>, iid=<span class=\"hljs-number\">4<\/span>, open=<span class=\"hljs-literal\">False<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-25\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Each item is identified by an <code>iid<\/code>. If you skip the <code>iid<\/code>, the insert method will generate one automatically. In this case, you need to have explicit <code>iid<\/code> for adding child items.<\/p>\n\n\n\n<p>Third, add two child items to the item with iid 0 by using the insert() and move() methods:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-26\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-comment\"># adding children of first node<\/span>\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'John Doe'<\/span>, iid=<span class=\"hljs-number\">5<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\ntree.insert(<span class=\"hljs-string\">''<\/span>, tk.END, text=<span class=\"hljs-string\">'Jane Doe'<\/span>, iid=<span class=\"hljs-number\">6<\/span>, open=<span class=\"hljs-literal\">False<\/span>)\ntree.move(<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">0<\/span>)\ntree.move(<span class=\"hljs-number\">6<\/span>, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">1<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-26\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally, place the Treeview widget on the root window and display it.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-27\" data-shcb-language-name=\"plaintext\" data-shcb-language-slug=\"plaintext\"><span><code class=\"hljs language-plaintext\"># place the Treeview widget on the root window\ntree.grid(row=0, column=0, sticky=tk.NSEW)\n\n# run the app\nroot.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-27\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">plaintext<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">plaintext<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use a Tkinter Treeview widget to display both tabular and hierarchical data.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"1546\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-treeview\/\"\n\t\t\t\tdata-post-title=\"Tkinter Treeview\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"1546\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-treeview\/\"\n\t\t\t\tdata-post-title=\"Tkinter Treeview\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about the Tkinter Treeview widget and how to use it to display both tabular and hierarchical data.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1232,"menu_order":28,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1546"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=1546"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1546\/revisions"}],"predecessor-version":[{"id":4198,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1546\/revisions\/4198"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1232"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=1546"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}