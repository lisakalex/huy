{"id":2166,"date":"2021-01-11T03:00:40","date_gmt":"2021-01-11T03:00:40","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=2166"},"modified":"2021-10-12T00:52:25","modified_gmt":"2021-10-12T00:52:25","slug":"tkinter-stringvar","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-stringvar\/","title":{"rendered":"Tkinter StringVar"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about the Tkinter <code>StringVar<\/code> object and how to use it to manipulate values of widgets.<\/p>\n\n\n\n<h2>Introduction to the Tkinter StringVar<\/h2>\n\n\n\n<p>The Tkinter <code>StringVar<\/code> helps you manage the value of a widget such as a <code><a href=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-label\/\">Label<\/a><\/code> or <code><a href=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-entry\/\">Entry<\/a><\/code> more effectively.<\/p>\n\n\n\n<p>To create a new <code>StringVar<\/code> object, you use the <code>StringVar<\/code> constructor like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">string_var = tk.StringVar(container, value, name)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>StringVar<\/code> constructor accepts three optional arguments:<\/p>\n\n\n\n<ul><li><code>container<\/code> is a widget that the <code>StringVar<\/code> object associated with. If you skip the container, it defaults to the root window.<\/li><li><code>value<\/code> is the initial value that defaults to an empty string <code>''<\/code>.<\/li><li><code>name<\/code> is a Tcl name that defaults to <code>PY_VARnum<\/code> e.g. <code>PY_VAR1<\/code>, <code>PY_VAR2<\/code>, etc.<\/li><\/ul>\n\n\n\n<p>After creating the <code>StringVar<\/code> object, you can assign it to the <code>textvariable<\/code> of a widget that accepts a <code>StringVar<\/code> object.<\/p>\n\n\n\n<p>For example, the following assigns the <code>string_var<\/code> to <code>textvariable<\/code> of the <code>Entry<\/code> widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">name_entry = ttk.Entry(root, textvariable=string_var)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To get the current value of the <code>Entry<\/code> widget, you can use the <code>get()<\/code> method of the <code>StringVar<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">name_var.get()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>StringVar<\/code> object will notify you whenever its value changes. This feature is useful if you want to automatically update other widgets based on the current value of the <code>StringVar<\/code> object.<\/p>\n\n\n\n<p>To invoke a callback whenever the value of an <code>StringVar<\/code> object changes, you use the <code>trace()<\/code> method of the <code>StringVar<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">string_var.trace(<span class=\"hljs-string\">'w'<\/span>, callback)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>'w'<\/code> mode will automatically invoke the <code>callback<\/code> whenever the value of the <code>string_var<\/code> changes.<\/p>\n\n\n\n<p>The <code>StringVar<\/code> also provides you with two other modes <code>'r'<\/code> and <code>'u'<\/code>:<\/p>\n\n\n\n<ul><li><code>'r'<\/code> (read) &#8211; invoke the callback whenever the variable is read.<\/li><li><code>'u'<\/code> (unset) &#8211; invoke the callback whenever the variable is deleted.<\/li><\/ul>\n\n\n\n<h2>Tkinter StringVar example<\/h2>\n\n\n\n<p>The following example illustrates how to use the <code>StringVar<\/code> object for an <code>Entry<\/code> widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        super().__init__()\n        self.title(<span class=\"hljs-string\">'Tkinter StringVar'<\/span>)\n        self.geometry(<span class=\"hljs-string\">\"300x80\"<\/span>)\n\n        self.name_var = tk.StringVar()\n\n        self.columnconfigure(<span class=\"hljs-number\">0<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\n        self.columnconfigure(<span class=\"hljs-number\">1<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\n        self.columnconfigure(<span class=\"hljs-number\">2<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\n\n        self.create_widgets()\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">create_widgets<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n\n        padding = {<span class=\"hljs-string\">'padx'<\/span>: <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'pady'<\/span>: <span class=\"hljs-number\">5<\/span>}\n        <span class=\"hljs-comment\"># label<\/span>\n        ttk.Label(self, text=<span class=\"hljs-string\">'Name:'<\/span>).grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">0<\/span>, **padding)\n\n        <span class=\"hljs-comment\"># Entry<\/span>\n        name_entry = ttk.Entry(self, textvariable=self.name_var)\n        name_entry.grid(column=<span class=\"hljs-number\">1<\/span>, row=<span class=\"hljs-number\">0<\/span>, **padding)\n        name_entry.focus()\n\n        <span class=\"hljs-comment\"># Button<\/span>\n        submit_button = ttk.Button(self, text=<span class=\"hljs-string\">'Submit'<\/span>, command=self.submit)\n        submit_button.grid(column=<span class=\"hljs-number\">2<\/span>, row=<span class=\"hljs-number\">0<\/span>, **padding)\n\n        <span class=\"hljs-comment\"># Output label<\/span>\n        self.output_label = ttk.Label(self)\n        self.output_label.grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">1<\/span>, columnspan=<span class=\"hljs-number\">3<\/span>, **padding)\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">submit<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        self.output_label.config(text=self.name_var.get())\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">\"__main__\"<\/span>:\n    app = App()\n    app.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"324\" height=\"133\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2021\/01\/Tkinter-StringVar-Example.gif\" alt=\"\" class=\"wp-image-2172\"\/><\/figure><\/div>\n\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, create a new <code>StringVar<\/code> object in the <code>__init__()<\/code> method of the <code>App<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.name_var = tk.StringVar()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, assign the <code>StringVar<\/code> object to the <code>textvariable<\/code> option of the <code>Entry<\/code> widget in the <code>create_widgets()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">name_entry = ttk.Entry(self, textvariable=self.name_var)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, set the text of the <code>output_label<\/code> widget to the value of the <code>name_var<\/code> object when the button is clicked.<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.output_label.config(text=self.name_var.get())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Tkinter StringVar &#8211; Tracing text changes example<\/h2>\n\n\n\n<p>The following example illustrates how to use the <code>StringVar<\/code> object to trace text changes.<\/p>\n\n\n\n<p>The root window has two <code>Entry<\/code> widgets: password and confirm password. If you enter the confirm password that is different from the password, it&#8217;ll show an error message. Otherwise, it&#8217;ll show a success message:<\/p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"324\" height=\"188\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2021\/01\/Tkinter-StringVar-Demo.gif\" alt=\"Tkinter StringVar Demo\" class=\"wp-image-2170\"\/><\/figure><\/div>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> tkinter <span class=\"hljs-keyword\">as<\/span> tk\n<span class=\"hljs-keyword\">from<\/span> tkinter <span class=\"hljs-keyword\">import<\/span> ttk\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">App<\/span><span class=\"hljs-params\">(tk.Tk)<\/span>:<\/span>\n    ERROR = <span class=\"hljs-string\">'Error.TLabel'<\/span>\n    SUCCESS = <span class=\"hljs-string\">'Success.TLabel'<\/span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        super().__init__()\n        self.title(<span class=\"hljs-string\">'Change Password'<\/span>)\n        self.geometry(<span class=\"hljs-string\">\"300x130\"<\/span>)\n\n        self.password_var = tk.StringVar()\n        self.confirm_password_var = tk.StringVar()\n\n        self.confirm_password_var.trace(<span class=\"hljs-string\">'w'<\/span>, self.validate)\n\n        self.columnconfigure(<span class=\"hljs-number\">0<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\n        self.columnconfigure(<span class=\"hljs-number\">1<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\n        self.columnconfigure(<span class=\"hljs-number\">2<\/span>, weight=<span class=\"hljs-number\">1<\/span>)\n\n        <span class=\"hljs-comment\"># set style<\/span>\n        self.style = ttk.Style(self)\n        self.style.configure(<span class=\"hljs-string\">'Error.TLabel'<\/span>, foreground=<span class=\"hljs-string\">'red'<\/span>)\n        self.style.configure(<span class=\"hljs-string\">'Success.TLabel'<\/span>, foreground=<span class=\"hljs-string\">'green'<\/span>)\n\n        self.create_widgets()\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">create_widgets<\/span><span class=\"hljs-params\">(self)<\/span>:<\/span>\n        <span class=\"hljs-string\">\"\"\" create a widget\n        \"\"\"<\/span>\n        padding = {<span class=\"hljs-string\">'padx'<\/span>: <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'pady'<\/span>: <span class=\"hljs-number\">5<\/span>, <span class=\"hljs-string\">'sticky'<\/span>: tk.W}\n        <span class=\"hljs-comment\"># message<\/span>\n        self.message_label = ttk.Label(self)\n        self.message_label.grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">0<\/span>, columnspan=<span class=\"hljs-number\">3<\/span>, **padding)\n\n        <span class=\"hljs-comment\"># password<\/span>\n        ttk.Label(self, text=<span class=\"hljs-string\">'New Password:'<\/span>).grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">1<\/span>, **padding)\n\n        password_entry = ttk.Entry(\n            self, textvariable=self.password_var, show=<span class=\"hljs-string\">'*'<\/span>)\n        password_entry.grid(column=<span class=\"hljs-number\">1<\/span>, row=<span class=\"hljs-number\">1<\/span>, **padding)\n        password_entry.focus()\n\n        <span class=\"hljs-comment\"># Confirm password<\/span>\n        ttk.Label(self, text=<span class=\"hljs-string\">'Confirm Password:'<\/span>).grid(\n            column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">2<\/span>, **padding)\n\n        confirm_password = ttk.Entry(\n            self, textvariable=self.confirm_password_var, show=<span class=\"hljs-string\">'*'<\/span>)\n        confirm_password.grid(column=<span class=\"hljs-number\">1<\/span>, row=<span class=\"hljs-number\">2<\/span>, **padding)\n        confirm_password.focus()\n\n        <span class=\"hljs-comment\"># Change button<\/span>\n        submit_button = ttk.Button(self, text=<span class=\"hljs-string\">'Change'<\/span>)\n        submit_button.grid(column=<span class=\"hljs-number\">0<\/span>, row=<span class=\"hljs-number\">3<\/span>, **padding)\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">set_message<\/span><span class=\"hljs-params\">(self, message, type=None)<\/span>:<\/span>\n        <span class=\"hljs-string\">\"\"\" set the error or success message\n        \"\"\"<\/span>\n        self.message_label&#91;<span class=\"hljs-string\">'text'<\/span>] = message\n        <span class=\"hljs-keyword\">if<\/span> type:\n            self.message_label&#91;<span class=\"hljs-string\">'style'<\/span>] = type\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">validate<\/span><span class=\"hljs-params\">(self, *args)<\/span>:<\/span>\n        <span class=\"hljs-string\">\"\"\" validate the password\n        \"\"\"<\/span>\n        password = self.password_var.get()\n        confirm_password = self.confirm_password_var.get()\n\n        <span class=\"hljs-keyword\">if<\/span> confirm_password == password:\n            self.set_message(\n                <span class=\"hljs-string\">\"Success: The new password looks good!\"<\/span>, self.SUCCESS)\n            <span class=\"hljs-keyword\">return<\/span>\n\n        <span class=\"hljs-keyword\">if<\/span> password.startswith(confirm_password):\n            self.set_message(<span class=\"hljs-string\">'Warning: Keep entering the password'<\/span>)\n\n\n        self.set_message(<span class=\"hljs-string\">\"Error: Passwords don't match!\"<\/span>, self.SUCCESS)\n\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">\"__main__\"<\/span>:\n    app = App()\n    app.mainloop()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>How it works:<\/p>\n\n\n\n<p>First, define two constants <code>ERROR<\/code> and <code>SUCCESS<\/code> that will be set to the <code>message_label<\/code> based on the result of the validation:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">ERROR = <span class=\"hljs-string\">'Error.TLabel'<\/span>\nSUCCESS = <span class=\"hljs-string\">'Success.TLabel'<\/span>\nWARNING = <span class=\"hljs-string\">'Warning.TLabel'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create two <code>StringVar<\/code> objects:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.password_var = tk.StringVar()\nself.confirm_password_var = tk.StringVar()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, use the <code>trace()<\/code> method to call the <code>self.validate()<\/code> method whenever the text of the password confirmation widget changes:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.confirm_password_var.trace(<span class=\"hljs-string\">'w'<\/span>, self.validate)  <\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Finally,  show the success message if the passwords match in the <code>validate()<\/code> method. Otherwise, show a warning message if the password starts with the confirmed password. If the passwords don&#8217;t match, show an error message.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use Tkinter <code>StringVar<\/code> object to manage values of widgets more effectively.<\/li><li>Assign the <code>StringVar<\/code> object to the <code>textvariable<\/code> of the widget.<\/li><li>Use the <code>trace()<\/code> method of the <code>StringVar<\/code> object to trace the text changes.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"2166\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-stringvar\/\"\n\t\t\t\tdata-post-title=\"Tkinter StringVar\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"2166\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/tkinter\/tkinter-stringvar\/\"\n\t\t\t\tdata-post-title=\"Tkinter StringVar\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn about the Tkinter StringVar object and how to use it to manipulate values of widgets. Introduction to the Tkinter StringVar The Tkinter StringVar helps you manage the value of a widget such as a Label or Entry more effectively. To create a new StringVar object, you use the StringVar [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":1232,"menu_order":48,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/2166"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=2166"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/2166\/revisions"}],"predecessor-version":[{"id":2503,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/2166\/revisions\/2503"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/1232"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=2166"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}