{"id":4515,"date":"2022-08-15T09:08:14","date_gmt":"2022-08-15T09:08:14","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=4515"},"modified":"2022-08-16T05:05:03","modified_gmt":"2022-08-16T05:05:03","slug":"numpy-stack","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/python-numpy\/numpy-stack\/","title":{"rendered":"NumPy stack()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the NumPy <code>stack()<\/code> function to join two or more arrays into a single array.<\/p>\n\n\n\n<h2>Introduction to the NumPy stack() function<\/h2>\n\n\n\n<p>The <code>stack()<\/code> function two or more <a href=\"https:\/\/www.pythontutorial.net\/python-numpy\/create-numpy-array\/\">arrays<\/a> into a single array. Unlike the <code><a href=\"https:\/\/www.pythontutorial.net\/python-numpy\/numpy-concatenate\/\">concatenate()<\/a><\/code> function, the stack() function joins 1D arrays to be one 2D array and joins 2D arrays to be one 3D array.<\/p>\n\n\n\n<p>The following shows the syntax of the <code>stack()<\/code> function:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">numpy.stack((a1,a2,...),axis=<span class=\"hljs-number\">0<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax, the (a1, a2, &#8230;) is a sequence of arrays with <code>ndarray<\/code> type or array-like objects. All arrays a1, a2, .. must have the same shape.<\/p>\n\n\n\n<p>The <code>axis<\/code> parameter specifies the axis in the result array along which the function stacks the input arrays. By default, the axis is zero which joins the input arrays vertically.<\/p>\n\n\n\n<p>Besides the <code>stack()<\/code> function, NumPy also has <code><a href=\"https:\/\/www.pythontutorial.net\/python-numpy\/numpy-vstack\/\">vstack()<\/a><\/code> function that joins two or more arrays vertically and <code><a href=\"https:\/\/www.pythontutorial.net\/python-numpy\/numpy-hstack\/\">hstack()<\/a><\/code> function that joins two or more arrays horizontally.<\/p>\n\n\n\n<h2>NumPy stack() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>stack()<\/code> function.<\/p>\n\n\n\n<h3>1) Using stack() function to join 1D arrays<\/h3>\n\n\n\n<p>The following example uses the <code>stack()<\/code> function to join two 1D arrays:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> numpy <span class=\"hljs-keyword\">as<\/span> np\n\na = np.array(&#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>])\nb = np.array(&#91;<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>])\n\nc = np.stack((a, b))\nprint(c)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&#91;&#91;<span class=\"hljs-number\">1<\/span> <span class=\"hljs-number\">2<\/span>] \n &#91;<span class=\"hljs-number\">3<\/span> <span class=\"hljs-number\">4<\/span>]]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/08\/numpy-stack-1d-arrays.svg\" alt=\"numpy stack 1d arrays\" class=\"wp-image-4559\"\/><\/figure>\n\n\n\n<p>The following example uses the <code>stack()<\/code> function to join two 1D arrays horizontally by using axis 1:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> numpy <span class=\"hljs-keyword\">as<\/span> np\n\na = np.array(&#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>])\nb = np.array(&#91;<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>])\n\nc = np.stack((a, b), axis=<span class=\"hljs-number\">1<\/span>)\nprint(c)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&#91;&#91;<span class=\"hljs-number\">1<\/span> <span class=\"hljs-number\">3<\/span>] \n &#91;<span class=\"hljs-number\">2<\/span> <span class=\"hljs-number\">4<\/span>]]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>2) Using numpy stack() function to join 2D arrays<\/h3>\n\n\n\n<p>The following example uses the <code>stack()<\/code> function to join elements of two 2D arrays. The result is a 3D array:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> numpy <span class=\"hljs-keyword\">as<\/span> np\n\na = np.array(&#91;\n    &#91;<span class=\"hljs-number\">1<\/span>, <span class=\"hljs-number\">2<\/span>],\n    &#91;<span class=\"hljs-number\">3<\/span>, <span class=\"hljs-number\">4<\/span>]\n])\nb = np.array(&#91;\n    &#91;<span class=\"hljs-number\">5<\/span>, <span class=\"hljs-number\">6<\/span>],\n    &#91;<span class=\"hljs-number\">7<\/span>, <span class=\"hljs-number\">8<\/span>]\n])\n\nc = np.stack((a, b))\nprint(c)\nprint(c.shape)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/08\/numpy-stack-2d-arrays.svg\" alt=\"numpy stack 2d arrays\" class=\"wp-image-4560\"\/><\/figure>\n\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">&#91;&#91;&#91;<span class=\"hljs-number\">1<\/span> <span class=\"hljs-number\">2<\/span>]\n  &#91;<span class=\"hljs-number\">3<\/span> <span class=\"hljs-number\">4<\/span>]]\n &#91;&#91;<span class=\"hljs-number\">5<\/span> <span class=\"hljs-number\">6<\/span>]\n  &#91;<span class=\"hljs-number\">7<\/span> <span class=\"hljs-number\">8<\/span>]]]\n(<span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">2<\/span>, <span class=\"hljs-number\">2<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>NumPy stack() vs. concatenate()<\/h2>\n\n\n\n<p>The following example illustrates the difference between <code>stack()<\/code> and <code>concatenate()<\/code> functions:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">a = np.<span class=\"hljs-keyword\">array<\/span>(&#91;<span class=\"hljs-number\">1<\/span>,<span class=\"hljs-number\">2<\/span>])\nb = np.<span class=\"hljs-keyword\">array<\/span>(&#91;<span class=\"hljs-number\">3<\/span>,<span class=\"hljs-number\">4<\/span>])\n\nc = np.concatenate((a,b)) <span class=\"hljs-comment\"># return 1-D array                    <\/span>\nd = np.stack((a,b)) <span class=\"hljs-comment\"># return 2-D array<\/span>\n<span class=\"hljs-keyword\">print<\/span>(c)\n<span class=\"hljs-keyword\">print<\/span>(d)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;<span class=\"hljs-number\">1<\/span> <span class=\"hljs-number\">2<\/span> <span class=\"hljs-number\">3<\/span> <span class=\"hljs-number\">4<\/span>]\n&#91;&#91;<span class=\"hljs-number\">1<\/span> <span class=\"hljs-number\">2<\/span>]\n &#91;<span class=\"hljs-number\">3<\/span> <span class=\"hljs-number\">4<\/span>]]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/08\/numpy-stack-vs-concatenate.svg\" alt=\"numpy stack vs concatenate\" class=\"wp-image-4534\"\/><\/figure>\n\n\n\n<p>In this example, the concatenate() function joins elements of two arrays along an <em>existing axis<\/em> while the <code>stack()<\/code> function joins the two arrays along a <em>new axis<\/em>.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the numpy <code>stack()<\/code> function to join two or more arrays into one.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4515\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-numpy\/numpy-stack\/\"\n\t\t\t\tdata-post-title=\"NumPy stack()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4515\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-numpy\/numpy-stack\/\"\n\t\t\t\tdata-post-title=\"NumPy stack()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Summary: in this tutorial, you&#8217;ll learn how to use the NumPy stack() function to join two or more arrays into a single array. Introduction to the NumPy stack() function The stack() function two or more arrays into a single array. Unlike the concatenate() function, the stack() function joins 1D arrays to be one 2D array [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":3406,"menu_order":31,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4515"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=4515"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4515\/revisions"}],"predecessor-version":[{"id":4562,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4515\/revisions\/4562"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3406"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=4515"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}