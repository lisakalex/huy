{"id":3309,"date":"2021-12-08T03:02:16","date_gmt":"2021-12-08T03:02:16","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=3309"},"modified":"2021-12-10T01:52:41","modified_gmt":"2021-12-10T01:52:41","slug":"python-regex-fullmatch","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-fullmatch\/","title":{"rendered":"Python Regex fullmatch()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the Python regex <code>fullmatch()<\/code> to match the whole string with a regular expression.<\/p>\n\n\n\n<h2>Introduction to the Python regex fullmatch function<\/h2>\n\n\n\n<p>The <code>fullmatch()<\/code> function returns a <code>Match<\/code> object if the whole string matches the search pattern of a <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regular-expressions\/\">regular expression<\/a>, or <code>None<\/code> otherwise. <\/p>\n\n\n\n<p>The syntax of the <code>fullmatch()<\/code> function is as follows:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">re.fullmatch(pattern, string, flags=<span class=\"hljs-number\">0<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li><code>pattern<\/code> specifies a regular expression to match.<\/li><li><code>string<\/code> specifies the input string.<\/li><li><code>flags<\/code> parameter is optional and defaults to zero. The <code>flags<\/code> parameter accepts one or more <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-flags\/\">regex flags<\/a>. The <code>flags<\/code> parameter changes how the regex engine matches the pattern.<\/li><\/ul>\n\n\n\n<h2>Python regex fullmatch function example<\/h2>\n\n\n\n<p>The following example uses the <code>fullmatch()<\/code> function to validate an email address:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> re\n\nemail = <span class=\"hljs-string\">'no-reply@pythontutorial.net'<\/span>\npattern = <span class=\"hljs-string\">r'&#91;A-Za-z0-9._%+-]+@&#91;A-Za-z0-9.-]+\\.&#91;A-Z|a-z]{2,}'<\/span>\nmatch = re.fullmatch(pattern, email)\n\n<span class=\"hljs-keyword\">if<\/span> match <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n    print(<span class=\"hljs-string\">f'The email \"<span class=\"hljs-subst\">{match.group()}<\/span>\" is valid'<\/span>)    \n<span class=\"hljs-keyword\">else<\/span>:\n    print(<span class=\"hljs-string\">f'The email \"<span class=\"hljs-subst\">{email}<\/span>\"\" is not valid'<\/span>)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">The email <span class=\"hljs-string\">\"no-reply@pythontutorial.net\"<\/span> <span class=\"hljs-keyword\">is<\/span> valid<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following defines a function that uses the <code>fullmatch()<\/code> function to validate an email address. It returns <code>True<\/code> if the email is valid or raises a <code>ValueError<\/code> exception otherwise:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> re\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">is_email<\/span><span class=\"hljs-params\">(s: str)<\/span> -&gt; bool:<\/span>\n    pattern = <span class=\"hljs-string\">r'&#91;A-Za-z0-9._%+-]+@&#91;A-Za-z0-9.-]+\\.&#91;A-Z|a-z]{2,}'<\/span>\n    <span class=\"hljs-keyword\">if<\/span> re.fullmatch(pattern, s) <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-literal\">None<\/span>:\n        <span class=\"hljs-keyword\">raise<\/span> ValueError(<span class=\"hljs-string\">f'The <span class=\"hljs-subst\">{s}<\/span> is not a valid email address'<\/span>)\n\n    <span class=\"hljs-keyword\">return<\/span> <span class=\"hljs-literal\">True<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>And you can use the <code>is_email()<\/code> function to validate an email like this:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    <span class=\"hljs-keyword\">try<\/span>:\n       <span class=\"hljs-keyword\">if<\/span> is_email(<span class=\"hljs-string\">'no-reply@pythontutorial'<\/span>):\n           print(<span class=\"hljs-string\">'The email is valid'<\/span>)\n    <span class=\"hljs-keyword\">except<\/span> ValueError <span class=\"hljs-keyword\">as<\/span> e:\n        print(e)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">The no-reply@pythontutorial <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> a valid email address<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Python regex fullmatch vs match<\/h2>\n\n\n\n<p>Both <code>fullmatch()<\/code> and <code>match()<\/code> functions return a <code>Match<\/code> object if they find a match.<\/p>\n\n\n\n<p>The <code>fullmatch()<\/code> function matches the whole string with a pattern while the <code>match()<\/code> function only finds a match at the beginning of the string. See the following example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'Python 3'<\/span>\npattern = <span class=\"hljs-string\">'Python'<\/span>\n\n<span class=\"hljs-comment\"># fullmatch<\/span>\nmatch = re.fullmatch(pattern, s)\n<span class=\"hljs-keyword\">if<\/span> match <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n    print(<span class=\"hljs-string\">'fullmatch:'<\/span>, match.group())\n\n<span class=\"hljs-comment\"># search<\/span>\nmatch = re.match(pattern, s)\n<span class=\"hljs-keyword\">if<\/span> match <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n    print(<span class=\"hljs-string\">'match:'<\/span>, match.group())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">match: Python<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>fullmatch()<\/code> returns <code>None<\/code> because the pattern <code>Python<\/code> only matches the beginning of the string, not the whole string. <\/p>\n\n\n\n<p>On the other hand, the <code>match()<\/code> function matches the pattern at the beginning of the string and returns the match.<\/p>\n\n\n\n<h2>Python fullmatch vs. search<\/h2>\n\n\n\n<p>Both <code>fullmatch()<\/code> and <code>search()<\/code> functions return a <code>Match<\/code> object if they find a match of a pattern in a string. However, the <code>fullmatch()<\/code> matches the whole string while the <code>search()<\/code> matches anywhere in the string.<\/p>\n\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'Python 3'<\/span>\npattern = <span class=\"hljs-string\">'\\d'<\/span>\n\n<span class=\"hljs-comment\"># fullmatch<\/span>\nmatch = re.fullmatch(pattern,s)\n<span class=\"hljs-keyword\">if<\/span> match <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n    print(match.group()) \n\n<span class=\"hljs-comment\"># search<\/span>\nmatch = re.search(pattern,s)\n<span class=\"hljs-keyword\">if<\/span> match <span class=\"hljs-keyword\">is<\/span> <span class=\"hljs-keyword\">not<\/span> <span class=\"hljs-literal\">None<\/span>:\n    print(match.group()) <span class=\"hljs-comment\"># 3<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-number\">3<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the pattern <code>\\d<\/code> matches a single digit. The <code>fullmatch()<\/code> function returns <code>None<\/code> because the whole string <code>'Python 3'<\/code> doesn&#8217;t match.<\/p>\n\n\n\n<p>However, the <code>search()<\/code> function returns a match because it could find the digit 3 at the end of the string.<\/p>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the Python regex <code>fullmatch()<\/code> function to check if the whole string matches a pattern of a regular expression.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3309\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-fullmatch\/\"\n\t\t\t\tdata-post-title=\"Python Regex fullmatch()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3309\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-fullmatch\/\"\n\t\t\t\tdata-post-title=\"Python Regex fullmatch()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the Python regex fullmatch() to match the whole string with a regular expression.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":3122,"menu_order":18,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3309"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=3309"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3309\/revisions"}],"predecessor-version":[{"id":3384,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3309\/revisions\/3384"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3122"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=3309"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}