{"id":3208,"date":"2021-12-03T04:11:15","date_gmt":"2021-12-03T04:11:15","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=3208"},"modified":"2021-12-03T09:05:46","modified_gmt":"2021-12-03T09:05:46","slug":"python-regex-lookbehind","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-lookbehind\/","title":{"rendered":"Python Regex Lookbehind"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn about Python regex lookbehind and negative lookbehind.<\/p>\n\n\n\n<h2>Introduction to the Python regex lookbehind<\/h2>\n\n\n\n<p>In <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regular-expressions\/\">regular expressions<\/a>, the lookbehind matches an element if there is another specific element before it. The lookbehind has the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">(?&lt;=Y)X<\/code><\/span><\/pre>\n\n\n<p>In this syntax, the pattern will match <code>X<\/code> if there is <code>Y<\/code> before it. <\/p>\n\n\n\n<p>For example, suppose you have the following string and want to match the number <code>500<\/code> not the number <code>1<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-string\">'1 phone costs $500'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To do that, you can use the following regular expression with a lookahead like this:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">(?&lt;=\\$)\\d+<\/code><\/span><\/pre>\n\n\n<p>In this pattern:<\/p>\n\n\n\n<ul><li><code>(?&lt;=\\$)<\/code> matches an element if there is a literal string <code>$<\/code> before it. Since the <code>$<\/code> is a special character in the regex, we use the backslash character <code>\\<\/code> to escape it. As a result, the regex engine will treat <code>\\$<\/code> as a regular character <code>$<\/code>.<\/li><li><code>\\d+<\/code> matches one or more digits.<\/li><\/ul>\n\n\n\n<p>The following example uses a regular expression with a lookbehind to match a number that has the <code>$<\/code> sign before it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'1 phone costs $500'<\/span>\npattern = <span class=\"hljs-string\">'(?&lt;=\\$)\\d+'<\/span>\n\nmatches = re.finditer(pattern, s)\n<span class=\"hljs-keyword\">for<\/span> match <span class=\"hljs-keyword\">in<\/span> matches:\n    print(match.group())\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">500<\/code><\/span><\/pre>\n\n\n<h2>Negative lookbehind<\/h2>\n\n\n\n<p>The negative lookbehind has the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">(?&lt;!Y)X<\/code><\/span><\/pre>\n\n\n<p>This pattern matches <code>X<\/code> if there is <strong>no<\/strong> <code>Y<\/code> before it.<\/p>\n\n\n\n<p>The following example uses a negative lookbehind to match a number that doesn&#8217;t have the <code>$<\/code> sign before it:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'1 phone costs $500'<\/span>\npattern = r<span class=\"hljs-string\">'\\b(?&lt;!\\$)\\d+\\b'<\/span>\n\nmatches = re.finditer(pattern, s)\n<span class=\"hljs-keyword\">for<\/span> match <span class=\"hljs-keyword\">in<\/span> matches:\n    print(match.group())\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">1<\/code><\/span><\/pre>\n\n\n<p>In the regular expression:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">r<span class=\"hljs-string\">'\\b(?&lt;!\\$)\\d+\\b'<\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<ul><li>The <code>\\b<\/code> matches the word boundary.<\/li><li>The <code>(?&lt;!\\$)<\/code> is a negative lookbehind that does not match the <code>$<\/code> sign.<\/li><li>The <code>\\d+<\/code> matches a number with one or more digits.<\/li><\/ul>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>A lookbehind <code>(?&lt;!Y)X<\/code> matches <code>X<\/code> only if there is element <code>Y<\/code> before it.<\/li><li>A negative lookbehind <code>(?&lt;!Y)X<\/code> matches <code>X<\/code> only if there&#8217;s no element <code>Y<\/code> before it.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3208\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-lookbehind\/\"\n\t\t\t\tdata-post-title=\"Python Regex Lookbehind\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3208\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-lookbehind\/\"\n\t\t\t\tdata-post-title=\"Python Regex Lookbehind\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn about Python regex lookbehind and negative lookbehind.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":3122,"menu_order":13,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3208"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=3208"}],"version-history":[{"count":3,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3208\/revisions"}],"predecessor-version":[{"id":3233,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3208\/revisions\/3233"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3122"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=3208"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}