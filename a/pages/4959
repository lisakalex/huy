{"id":4959,"date":"2022-09-20T03:47:02","date_gmt":"2022-09-20T03:47:02","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=4959"},"modified":"2022-10-25T03:26:38","modified_gmt":"2022-10-25T03:26:38","slug":"pyqt-qvboxlayout","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qvboxlayout\/","title":{"rendered":"PyQt QVBoxLayout"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PyQt <code>QVBoxLayout<\/code> to arrange widgets vertically.<\/p>\n\n\n\n<h2>Introduction to the PyQt QVBoxLayout<\/h2>\n\n\n\n<p>The <code>QVBoxLayout<\/code> divides the parent widget into vertical boxes and places the child widgets sequentially from top to bottom.<\/p>\n\n\n\n<p>This program illustrates how to use the <code>QVBoxLayout<\/code> class:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/mark><mark class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Find Next'<\/span>, <span class=\"hljs-string\">'Find All'<\/span>, <span class=\"hljs-string\">'Close'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><mark class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"414\" height=\"205\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QVBoxLayout.png\" alt=\"\" class=\"wp-image-4961\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QVBoxLayout.png 414w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QVBoxLayout-300x149.png 300w\" sizes=\"(max-width: 414px) 100vw, 414px\" \/><\/figure>\n\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, create a <code>QVBoxLayout<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">layout = QVBoxLayout()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Next, set the layout for the <code>MainWindow<\/code> by calling its <code>setLayout()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.setLayout(layout)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Then, define a list of three strings that represent button titles:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\">titles = &#91;<span class=\"hljs-string\">'Find Next'<\/span>, <span class=\"hljs-string\">'Find All'<\/span>, <span class=\"hljs-string\">'Close'<\/span>]<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>After that, create three buttons (<code><a href=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qpushbutton\/\">QPushButton<\/a><\/code>) from the list <code>titles<\/code> using a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-list-comprehensions\/\">list comprehension<\/a>:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">buttons = &#91;QPushButton(title) for title in titles]<\/code><\/span><\/pre>\n\n\n<p>Finally, add the buttons to the layout using a <code><a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-for-loop-list\/\">for<\/a><\/code> loop:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n    layout.addWidget(button)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Alignments<\/h2>\n\n\n\n<p>The <code>QVBoxLayout<\/code> stretches each widget type in a specific way. For example, the <code>QVBoxLayout<\/code> stretches the <code>QPushButton<\/code> horizontally, not vertically. <\/p>\n\n\n\n<p>It means that when you increase the width of the parent widget, the widths of all the buttons also increase:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"609\" height=\"205\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Resize.png\" alt=\"PyQt QVBoxLayout - Resize\" class=\"wp-image-5383\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Resize.png 609w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Resize-300x101.png 300w\" sizes=\"(max-width: 609px) 100vw, 609px\" \/><\/figure>\n\n\n\n<p>However, when you increase the height of the parent widget, the heights of the buttons don&#8217;t change. More importantly, the <code>QVBoxLayout<\/code> allocates evenly the spaces of the parent widget to each button:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"609\" height=\"469\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Vertical-Spaces.png\" alt=\"PyQt QVBoxLayout - Vertical Spaces\" class=\"wp-image-5384\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Vertical-Spaces.png 609w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Vertical-Spaces-300x231.png 300w\" sizes=\"(max-width: 609px) 100vw, 609px\" \/><\/figure>\n\n\n\n<p>When the parent widget has more space for the child widgets, you can align the child widgets within the parent widget using vertical spacers.<\/p>\n\n\n\n<h3>Align bottom<\/h3>\n\n\n\n<p>To push the buttons to the bottom of the parent widget, you add a vertical spacer at the beginning of the layout by using the <code>addStretch()<\/code> method of the <code>QVBoxLayout<\/code> object:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"280\" height=\"434\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Bottom-with-a-Vertical-Spacer.png\" alt=\"PyQt QVBoxLayout - Align Bottom with a Vertical Spacer\" class=\"wp-image-5410\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Bottom-with-a-Vertical-Spacer.png 280w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Bottom-with-a-Vertical-Spacer-194x300.png 194w\" sizes=\"(max-width: 280px) 100vw, 280px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>        \n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Find Next'<\/span>, <span class=\"hljs-string\">'Find All'<\/span>, <span class=\"hljs-string\">'Close'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>If you increase the height of the window, the vertical spacer will stretch to the end of the <code>QVBoxLayout<\/code> and leaves enough spaces for the buttons:<\/p>\n\n\n\n<h3>Align top<\/h3>\n\n\n\n<p>Similarly, you can add a vertical spacer as the last item of the layout to push the buttons to the top by calling the <code>addStretch()<\/code> method after adding the buttons to the layout:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"278\" height=\"428\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Top-with-a-Vertical-Spacer.png\" alt=\"PyQt QVBoxLayout - Align Top with a Vertical Spacer\" class=\"wp-image-5409\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Top-with-a-Vertical-Spacer.png 278w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Top-with-a-Vertical-Spacer-195x300.png 195w\" sizes=\"(max-width: 278px) 100vw, 278px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Find Next'<\/span>, <span class=\"hljs-string\">'Find All'<\/span>, <span class=\"hljs-string\">'Close'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Align center<\/h3>\n\n\n\n<p>To align the buttons in the center of the parent widget, you add a vertical spacer at the beginning and one at the end of the layout like this:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"277\" height=\"425\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Center-with-Vertical-Spacers.png\" alt=\"PyQt QVBoxLayout - Align Center with Vertical Spacers\" class=\"wp-image-5411\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Center-with-Vertical-Spacers.png 277w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Align-Center-with-Vertical-Spacers-196x300.png 196w\" sizes=\"(max-width: 277px) 100vw, 277px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Find Next'<\/span>, <span class=\"hljs-string\">'Find All'<\/span>, <span class=\"hljs-string\">'Close'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that you can add a vertical spacer between the widgets in the <code>QVBoxLayout<\/code>. For example, the following adds a vertical spacer between the second and third buttons:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"276\" height=\"428\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Add-a-vertical-spacer-between-widgets.png\" alt=\"\" class=\"wp-image-5412\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Add-a-vertical-spacer-between-widgets.png 276w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Add-a-vertical-spacer-between-widgets-193x300.png 193w\" sizes=\"(max-width: 276px) 100vw, 276px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        find_next_btn = QPushButton(<span class=\"hljs-string\">'Find Next'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        find_all_btn = QPushButton(<span class=\"hljs-string\">'Find All'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        close_btn = QPushButton(<span class=\"hljs-string\">'Find All'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add the first &amp; second buttons to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(find_next_btn)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(find_all_btn)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add the third button<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(close_btn)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Setting layout stretch factors<\/h2>\n\n\n\n<p>The following program displays three <code>QLabel<\/code> widgets with different background colors red, green, and blue using the <code>QVBoxLayout<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QLabel, QVBoxLayout\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n        super().__init__(*args, **kwargs)\n\n        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n\n        <span class=\"hljs-comment\"># create a layout<\/span>\n        layout = QVBoxLayout()\n        self.setLayout(layout)\n\n        <span class=\"hljs-comment\"># create buttons<\/span>\n        label_1 = QLabel()\n        label_1.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:red}'<\/span>)\n        label_2 = QLabel()\n        label_2.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:green}'<\/span>)\n        label_3 = QLabel()\n        label_3.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:blue}'<\/span>)\n\n        layout.addWidget(label_1)\n        layout.addWidget(label_2)\n        layout.addWidget(label_3)\n\n        <span class=\"hljs-comment\"># show the window<\/span>\n        self.show()\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    sys.exit(app.exec())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p class=\"note\">Note that we use the <a href=\"https:\/\/www.pythontutorial.net\/pyqt\/qt-style-sheets\/\">style sheets<\/a> to set the background color for the <code>QLabel<\/code> widgets. <\/p>\n\n\n\n<p>Unlike <code>QPushButton<\/code> widgets, the <code>QLabel<\/code> widgets stretch both vertically and horizontally when you resize the parent widget:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"413\" height=\"270\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-QLabel.png\" alt=\"PyQt QVBoxLayout - QLabel\" class=\"wp-image-5397\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-QLabel.png 413w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-QLabel-300x196.png 300w\" sizes=\"(max-width: 413px) 100vw, 413px\" \/><\/figure>\n\n\n\n<p>To allocate spaces for each <code>QLabel<\/code> widget proportionally, you use the <code>setStretchFactor()<\/code> method with the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">setStretchFactor(widget, factor)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The <code>setStretchFactor()<\/code> method sets a stretch <code>factor<\/code> for the <code>widget<\/code> to stretch within the layout. Therefore, you need to <code>setStretchFactor()<\/code> method after adding the child widgets to the layout.<\/p>\n\n\n\n<p>The following program uses the <code>setStretchFactor()<\/code> method to set the stretch factors for the first, second, and third <code>QLabel<\/code> widgets as 1, 2, and 3:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QLabel, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        label_1 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_1.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:red}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        label_2 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_2.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:green}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        label_3 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_3.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:blue}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_1)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_2)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_3)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.setStretchFactor(label_1, <span class=\"hljs-number\">1<\/span>)\n<\/span><\/mark><mark class='shcb-loc'><span>        layout.setStretchFactor(label_2, <span class=\"hljs-number\">2<\/span>)\n<\/span><\/mark><mark class='shcb-loc'><span>        layout.setStretchFactor(label_3, <span class=\"hljs-number\">3<\/span>)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"413\" height=\"322\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Layout-Stretch-Factor.png\" alt=\"PyQt QVBoxLayout - Layout Stretch Factor\" class=\"wp-image-5399\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Layout-Stretch-Factor.png 413w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Layout-Stretch-Factor-300x234.png 300w\" sizes=\"(max-width: 413px) 100vw, 413px\" \/><\/figure>\n\n\n\n<p>Because of the stretch factors, the second <code>QLabel<\/code> widget takes twice as much space as the first one and the third <code>QLabel<\/code> widget uses space that is three times bigger than the first one.<\/p>\n\n\n\n<h2>Setting spaces between widgets<\/h2>\n\n\n\n<p>By default, the <code>QVBoxLayout<\/code> sets a default space between widgets. To change the spaces between widgets, you use the <code>setSpacing()<\/code> method. <\/p>\n\n\n\n<p>The following example uses the <code>setSpacing()<\/code> method to set the spaces between <code>QLabel<\/code> widgets to zero:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-13\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QLabel, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        label_1 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_1.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:red}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        label_2 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_2.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:green}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        label_3 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_3.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:blue}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_1)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_2)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_3)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.setSpacing(<span class=\"hljs-number\">0<\/span>)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-13\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"408\" height=\"197\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Setting-Spaces.png\" alt=\"PyQt QVBoxLayout - Setting Spaces\" class=\"wp-image-5439\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Setting-Spaces.png 408w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Setting-Spaces-300x145.png 300w\" sizes=\"(max-width: 408px) 100vw, 408px\" \/><\/figure>\n\n\n\n<h2>Setting content margins<\/h2>\n\n\n\n<p>By default, the <code>QVBoxLayout<\/code> sets specific left, top, right, and bottom margins for a widget. To change the margins, you use the <code>setContentsMargins()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-14\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">setContentsMargins(<span class=\"hljs-keyword\">self<\/span>, left: int, top: int, right: int, bottom: int) -&gt; None<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-14\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the following uses the <code>setContentsMargins()<\/code> method to set the margins for <code>QLabel<\/code> widgets to zero:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-15\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QLabel, QVBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QVBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QVBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        label_1 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_1.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:red}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        label_2 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_2.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:green}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        label_3 = QLabel(<span class=\"hljs-string\">''<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>        label_3.setStyleSheet(<span class=\"hljs-string\">'QLabel{background-color:blue}'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_1)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_2)\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(label_3)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># set the contents margins<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.setContentsMargins(<span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">0<\/span>, <span class=\"hljs-number\">0<\/span>)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-15\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"417\" height=\"181\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Setting-Contents-Margins.png\" alt=\"PyQt QVBoxLayout - Setting Contents Margins\" class=\"wp-image-5440\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Setting-Contents-Margins.png 417w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QVBoxLayout-Setting-Contents-Margins-300x130.png 300w\" sizes=\"(max-width: 417px) 100vw, 417px\" \/><\/figure>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use PyQt <code>QVBoxLayout<\/code> to divide the parent widget into vertical boxes and place the child widgets sequentially from top to bottom.<\/li><li>Use the <code>addStretch()<\/code> method of the <code>QVBoxLayout<\/code> object to add a vertical spacer to the layout to align widgets at the top, bottom, or center.<\/li><li>Use the <code>setStretchFactor()<\/code> method of the <code>QVBoxLayout<\/code> object to set a stretch factor for a widget in the layout.<\/li><li>Use the <code>setSpacing()<\/code> method of the  <code>QVBoxLayout<\/code> object to set the spaces between child widgets.<\/li><li>Use the <code>setContentsMargins()<\/code> method of the <code>QVBoxLayout<\/code> object to set the left, top, right, and bottom margins of the contents.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4959\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qvboxlayout\/\"\n\t\t\t\tdata-post-title=\"PyQt QVBoxLayout\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4959\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qvboxlayout\/\"\n\t\t\t\tdata-post-title=\"PyQt QVBoxLayout\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PyQt QVBoxLayout to arrange widgets vertically<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":4862,"menu_order":6,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4959"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=4959"}],"version-history":[{"count":4,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4959\/revisions"}],"predecessor-version":[{"id":5441,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4959\/revisions\/5441"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4862"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=4959"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}