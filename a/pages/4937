{"id":4937,"date":"2022-09-20T02:36:16","date_gmt":"2022-09-20T02:36:16","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=4937"},"modified":"2022-10-18T02:18:25","modified_gmt":"2022-10-18T02:18:25","slug":"pyqt-qlineedit","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qlineedit\/","title":{"rendered":"PyQt QLineEdit"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PyQt <code>QLineEdit<\/code> widget to create a single-line text-entry widget.<\/p>\n\n\n\n<h2>Introduction to the PyQt QLineEdit widget<\/h2>\n\n\n\n<p>The PyQt <code>QLineEdit<\/code> allows you to create a single-line text-entry widget. Typically, you&#8217;ll use the <code>QLineEdit<\/code> in a data-entry form. <\/p>\n\n\n\n<p>In practice, you often use the <code>QLineEdit<\/code> widget with a <code><a href=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qlabel\/\">QLabel<\/a><\/code> widget.<\/p>\n\n\n\n<p>To create a <code>QLineEdit<\/code> widget, you follow these steps.<\/p>\n\n\n\n<p>First, import <code>QLineEdit<\/code> from <code>PyQt6.QtWidgets<\/code> module:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QLineEdit<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, create a new <code>QLineEdit<\/code> object that uses:<\/p>\n\n\n\n<ul><li>No arguments.<\/li><li>With only a parent widget.<\/li><li>Or with a default string value as the first argument.<\/li><\/ul>\n\n\n\n<p>For example:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">line_edit = QLineEdit(<span class=\"hljs-string\">'Default Value'<\/span>, self)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Also, you can use the following additional properties:<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><thead><tr><th>Property<\/th><th>Type<\/th><th>Description<\/th><\/tr><\/thead><tbody><tr><td>text<\/td><td>string<\/td><td>The content of the line edit<\/td><\/tr><tr><td><code>readOnly<\/code><\/td><td>Boolean<\/td><td>True or False. If True, the line edit cannot be edited<\/td><\/tr><tr><td><code>clearButtonEnabled<\/code><\/td><td>Boolean<\/td><td>True to add a clear button<\/td><\/tr><tr><td><code>placeholderText<\/code><\/td><td>string<\/td><td>The text that appears when the line edit is empty<\/td><\/tr><tr><td><code>maxLength<\/code><\/td><td>integer<\/td><td>Specify the maximum number of characters that can be entered<\/td><\/tr><tr><td><code>echoMode<\/code><\/td><td><code>QLineEdit<\/code>.EchoMode<\/td><td>Change the way the text displays e.g., password<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2>PyQt QLineEdit widget examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the <code>QLineEdit<\/code> widget.<\/p>\n\n\n\n<h3>1) Simple PyQt QLineEdit example<\/h3>\n\n\n\n<p>The following program shows how to create a <code>QLineEdit<\/code> widget:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> (\n    QApplication,\n    QWidget,\n    QLineEdit,\n    QVBoxLayout\n)\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n        super().__init__(*args, **kwargs)\n\n        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QLineEdit Widget'<\/span>)\n        self.setGeometry(<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">320<\/span>, <span class=\"hljs-number\">210<\/span>)\n\n        search_box = QLineEdit(\n            self,\n            placeholderText=<span class=\"hljs-string\">'Enter a keyword to search...'<\/span>,\n            clearButtonEnabled=<span class=\"hljs-literal\">True<\/span>\n        )\n\n        <span class=\"hljs-comment\"># place the widget on the window<\/span>\n        layout = QVBoxLayout()\n        layout.addWidget(search_box)\n        self.setLayout(layout)\n\n        <span class=\"hljs-comment\"># show the window<\/span>\n        self.show()\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    sys.exit(app.exec())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"482\" height=\"361\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Example.png\" alt=\"\" class=\"wp-image-4944\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Example.png 482w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Example-300x225.png 300w\" sizes=\"(max-width: 482px) 100vw, 482px\" \/><\/figure>\n\n\n\n<h3>2) Using the PyQt QLineEdit to create a password entry<\/h3>\n\n\n\n<p>The following program creates a new <code>QLineEdit<\/code> widget as a password entry:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> (\n    QApplication,\n    QWidget,\n    QLineEdit,\n    QVBoxLayout\n)\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n        super().__init__(*args, **kwargs)\n\n        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QLineEdit Widget'<\/span>)\n        self.setGeometry(<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">320<\/span>, <span class=\"hljs-number\">210<\/span>)\n\n        password = QLineEdit(self, echoMode=QLineEdit.EchoMode.Password)\n\n        <span class=\"hljs-comment\"># place the widget on the window<\/span>\n        layout = QVBoxLayout()\n        layout.addWidget(password)\n        self.setLayout(layout)\n\n        <span class=\"hljs-comment\"># show the window<\/span>\n        self.show()\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    sys.exit(app.exec())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>To make the <code>QLineEdit<\/code> widget a password entry, you set the <code>echoMode<\/code> to <code>QLineEdit<\/code>.<code>EchoMode.Password<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">password = QLineEdit(self, echoMode=QLineEdit.EchoMode.Password)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"482\" height=\"361\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Password.png\" alt=\"\" class=\"wp-image-4945\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Password.png 482w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Password-300x225.png 300w\" sizes=\"(max-width: 482px) 100vw, 482px\" \/><\/figure>\n\n\n\n<h3>3) Using the PyQt QLineEdit with the auto-complete feature<\/h3>\n\n\n\n<p>To create an entry with the auto-complete feature, you follow these steps:<\/p>\n\n\n\n<p>First, import the <code>QCompleter<\/code> from <code>PyQt6.QtWidgets<\/code> module.<\/p>\n\n\n\n<p>Second, create a <code>QCompleter<\/code> widget with a list of strings used for autocomplete feature:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">completer = QCompleter(word_list)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, create a <code>QLineEdit<\/code> and call its <code>setCompleter()<\/code> method with the completer object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">line_edit = QLineEdit(self)\nline_edit.setCompleter(completer)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>For example, the following program shows a <code>QLineEdit<\/code> widget with an auto-complete feature:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> (\n    QApplication,\n    QWidget,\n    QLineEdit,\n    QVBoxLayout,\n    QCompleter\n)\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n        super().__init__(*args, **kwargs)\n\n        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QLineEdit Widget'<\/span>)\n        self.setGeometry(<span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">100<\/span>, <span class=\"hljs-number\">320<\/span>, <span class=\"hljs-number\">210<\/span>)\n\n       \n        common_fruits = QCompleter(&#91;\n            <span class=\"hljs-string\">'Apple'<\/span>,\n            <span class=\"hljs-string\">'Apricot'<\/span>,\n            <span class=\"hljs-string\">'Banana'<\/span>,\n            <span class=\"hljs-string\">'Carambola'<\/span>,\n            <span class=\"hljs-string\">'Olive'<\/span>,\n            <span class=\"hljs-string\">'Oranges'<\/span>,\n            <span class=\"hljs-string\">'Papaya'<\/span>,\n            <span class=\"hljs-string\">'Peach'<\/span>,\n            <span class=\"hljs-string\">'Pineapple'<\/span>,\n            <span class=\"hljs-string\">'Pomegranate'<\/span>,\n            <span class=\"hljs-string\">'Rambutan'<\/span>,\n            <span class=\"hljs-string\">'Ramphal'<\/span>,\n            <span class=\"hljs-string\">'Raspberries'<\/span>,\n            <span class=\"hljs-string\">'Rose apple'<\/span>,\n            <span class=\"hljs-string\">'Starfruit'<\/span>,\n            <span class=\"hljs-string\">'Strawberries'<\/span>,\n            <span class=\"hljs-string\">'Water apple'<\/span>,\n        ])\n        fruit = QLineEdit(self)\n        fruit.setCompleter(common_fruits)\n\n        <span class=\"hljs-comment\"># place the widget on the window<\/span>\n        layout = QVBoxLayout()\n        layout.addWidget(fruit)\n        self.setLayout(layout)\n\n        <span class=\"hljs-comment\"># show the window<\/span>\n        self.show()\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    sys.exit(app.exec())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"482\" height=\"361\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Widget.png\" alt=\"\" class=\"wp-image-4946\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Widget.png 482w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QLineEdit-Widget-300x225.png 300w\" sizes=\"(max-width: 482px) 100vw, 482px\" \/><\/figure>\n\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the <code>QLineEdit<\/code> to create a single-line entry widget.<\/li><li>Use the <code>echoMode<\/code> property to change the way the text is displayed.<\/li><li>Use the <code>QLineEdit<\/code> widget with a QCompleter widget to support the auto-complete feature.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4937\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qlineedit\/\"\n\t\t\t\tdata-post-title=\"PyQt QLineEdit\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4937\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qlineedit\/\"\n\t\t\t\tdata-post-title=\"PyQt QLineEdit\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PyQt QLineEdit widget to create a single-line text-entry widget.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":4862,"menu_order":4,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4937"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=4937"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4937\/revisions"}],"predecessor-version":[{"id":5283,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4937\/revisions\/5283"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4862"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=4937"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}