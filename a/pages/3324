{"id":3324,"date":"2021-12-09T01:31:04","date_gmt":"2021-12-09T01:31:04","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=3324"},"modified":"2021-12-10T02:09:10","modified_gmt":"2021-12-10T02:09:10","slug":"python-regex-split","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-split\/","title":{"rendered":"Python Regex split()"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the Python regex <code>split()<\/code> function to split a string at the occurrences of matches of a regular expression.<\/p>\n\n\n\n<h2>Introduction to the Python regex split() function<\/h2>\n\n\n\n<p>The built-in <code>re<\/code> module provides you with the <code>split()<\/code> function that splits a string by the matches of a <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regular-expressions\/\">regular expression<\/a>. <\/p>\n\n\n\n<p>The <code>split()<\/code> function has the following syntax:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">split(pattern, string, maxsplit=0, flags=0)<\/code><\/span><\/pre>\n\n\n<p>In this syntax:<\/p>\n\n\n\n<ul><li><code>pattern<\/code> is a regular expression whose matches will be used as separators for splitting.<\/li><li><code>string<\/code> is an input string to split.<\/li><li><code>maxsplit<\/code> determines at most the splits occur. Generally, if the <code>maxsplit<\/code> is one, the resulting list will have two elements. If the <code>maxsplit<\/code> is two, the resulting list will have three elements, and so on.<\/li><li><code>flags<\/code> parameter is optional and defaults to zero. The <code>flags<\/code> parameter accepts one or more <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-flags\/\">regex flags<\/a>. The <code>flags<\/code> parameter changes how the regex engine matches the pattern.<\/li><\/ul>\n\n\n\n<p>The <code>split()<\/code> function returns a list of substrings split by the matches of the pattern in the string.<\/p>\n\n\n\n<p>If the <code>pattern<\/code> contains one or more <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-capturing-group\/\">capturing groups<\/a>, the <code>split()<\/code> function will return the text of all groups as elements of the resulting list.<\/p>\n\n\n\n<p>If the <code>pattern<\/code> contains a capturing group that matches the start of a string, the <code>split()<\/code> function will return a resulting list with the first element being as an empty string. This logic is the same for the end of the string.<\/p>\n\n\n\n<h2>Python regex split() function examples<\/h2>\n\n\n\n<p>Let&#8217;s take some examples of using the regex <code>split()<\/code> function.<\/p>\n\n\n\n<h3>1) Using the split() function to split words in a sentence<\/h3>\n\n\n\n<p>The following example uses the <code>split()<\/code> function to split the words in a sentence:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'A! B. C D'<\/span>\npattern = r<span class=\"hljs-string\">'\\W+'<\/span>\n\nl = re.split(pattern, s)\nprint(l)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>\\W+<\/code> is the inverse of the word <a href=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-character-set\/\">character set<\/a> that matches one or more characters that are not the word characters.<\/p>\n\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'A', 'B', 'C', 'D']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>2) Using the split() function with the maxsplit argument<\/h3>\n\n\n\n<p>The following example uses the <code>split()<\/code> function that splits a string with two splits at non-word characters:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'A! B. C D'<\/span>\npattern = r<span class=\"hljs-string\">'\\W+'<\/span>\n\nl = re.split(pattern, s, <span class=\"hljs-number\">2<\/span>)\nprint(l)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'A', 'B', 'C D']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Because we split the string with two splits, the resulting list contains three elements. Notice that the <code>split()<\/code> function returns the remainder of a string as the final element in the resulting list.<\/p>\n\n\n\n<h3>3) Using the split() function with a capturing group<\/h3>\n\n\n\n<p>The following example uses the <code>split()<\/code> function that splits a string with the <code>\\W+<\/code> pattern that contains a capturing group:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'A! B. C D'<\/span>\npattern = r<span class=\"hljs-string\">'(\\W+)'<\/span>\n\nl = re.split(pattern, s, <span class=\"hljs-number\">2<\/span>)\nprint(l)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'A', '! ', 'B', '. ', 'C D']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this example, the <code>split()<\/code> function also returns the text of the group in the resulting list.<\/p>\n\n\n\n<h3>4) Using the split() function <\/h3>\n\n\n\n<p>The following example uses the <code>split()<\/code> function where the separator contains a capturing group that matches the start of the string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'...A! B. C D'<\/span>\npattern = r<span class=\"hljs-string\">'\\W+'<\/span>\n\nl = re.split(pattern, s)\nprint(l)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>In this case, the <code>split()<\/code> function returns a list with the first element is an empty string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'', 'A', 'B', 'C', 'D']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Similarly, if the separator contains the capturing groups and it matches the end of the string, the resulting list will have the last element as an empty string:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"JavaScript\" data-shcb-language-slug=\"javascript\"><span><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import<\/span> re\n\ns = <span class=\"hljs-string\">'A! B. C D...'<\/span>\npattern = r<span class=\"hljs-string\">'\\W+'<\/span>\n\nl = re.split(pattern, s)\nprint(l)\n<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JavaScript<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">javascript<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"JSON \/ JSON with Comments\" data-shcb-language-slug=\"json\"><span><code class=\"hljs language-json\">&#91;'A', 'B', 'C', 'D', '']<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">JSON \/ JSON with Comments<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">json<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul><li>Use the Python regex <code>split()<\/code> function to split a string using sepators as the matches of a regular expression.<\/li><\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"3324\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-split\/\"\n\t\t\t\tdata-post-title=\"Python Regex split()\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"3324\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/python-regex\/python-regex-split\/\"\n\t\t\t\tdata-post-title=\"Python Regex split()\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the Python regex split() function to split a string at the occurrences of matches of a regular expression.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":3122,"menu_order":20,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3324"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=3324"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3324\/revisions"}],"predecessor-version":[{"id":3393,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3324\/revisions\/3393"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/3122"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=3324"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}