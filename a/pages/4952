{"id":4952,"date":"2022-09-20T03:35:23","date_gmt":"2022-09-20T03:35:23","guid":{"rendered":"https:\/\/www.pythontutorial.net\/?page_id=4952"},"modified":"2022-12-09T07:01:24","modified_gmt":"2022-12-09T07:01:24","slug":"pyqt-qhboxlayout","status":"publish","type":"page","link":"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qhboxlayout\/","title":{"rendered":"PyQt QHBoxLayout"},"content":{"rendered":"\n<p><strong>Summary<\/strong>: in this tutorial, you&#8217;ll learn how to use the PyQt <code>QHBoxLayout<\/code> to arrange widgets horizontally.<\/p>\n\n\n\n<p>PyQt layout defines the way to arrange child widgets on a parent widget. PyQt supports a variety of layout classes, each has a layout strategy that suits a particular situation.<\/p>\n\n\n\n<p>The steps for using a layout class are as follows:<\/p>\n\n\n\n<ul>\n<li>First, create a layout object from a layout class.<\/li>\n\n\n\n<li>Second, assign the layout object to the parent widget&#8217;s layout property using the <code>setLayout()<\/code> method.<\/li>\n\n\n\n<li>Third, add widgets to the layout using the <code>addWidget()<\/code> method of the layout object.<\/li>\n<\/ul>\n\n\n\n<p>Also, you can add layouts to a layout using the <code>addLayout()<\/code> method. This allows you to create a more complex layout for arranging widgets.<\/p>\n\n\n\n<h2>Introduction to the PyQt QHBoxLayout<\/h2>\n\n\n\n<p>The <code>QHBoxLayout<\/code> divides the parent widget into horizontal boxes and places the child widgets sequentially from left to right.<\/p>\n\n\n\n<p>The following program shows how to use the <code>QHBoxLayout<\/code>:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-1\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import<\/span> sys\n<span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n        super().__init__(*args, **kwargs)\n\n        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n\n        <span class=\"hljs-comment\"># create a layout<\/span>\n        layout = QHBoxLayout()\n        self.setLayout(layout)\n\n        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n            layout.addWidget(button)\n\n        <span class=\"hljs-comment\"># show the window<\/span>\n        self.show()\n\n\n<span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n    app = QApplication(sys.argv)\n    window = MainWindow()\n    sys.exit(app.exec())<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-1\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Output:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"413\" height=\"115\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QHBoxLayout.png\" alt=\"PyQt QHBoxLayout\" class=\"wp-image-4954\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QHBoxLayout.png 413w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/09\/PyQt-QHBoxLayout-300x84.png 300w\" sizes=\"(max-width: 413px) 100vw, 413px\" \/><\/figure>\n\n\n\n<p>How it works.<\/p>\n\n\n\n<p>First, create a <code>QHBoxLayout<\/code> object:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-2\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">layout = QHBoxLayout()<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-2\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Second, set the layout for the <code>MainWindow<\/code> by calling its <code>setLayout()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-3\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">self.setLayout(layout)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-3\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Third, create three buttons using <code><a href=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qpushbutton\/\">QPushButton<\/a><\/code> and add them to the layout using the <code>addWidget()<\/code> method:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-4\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python\">titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\nbuttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n    layout.addWidget(button)<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-4\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>Note that we use a <a href=\"https:\/\/www.pythontutorial.net\/python-basics\/python-list-comprehensions\/\">list comprehension<\/a> to create three push buttons based on the list of titles.<\/p>\n\n\n\n<h2>Alignments<\/h2>\n\n\n\n<p>When the parent widget has more space for child widgets, the child widgets will stretch horizontally like this:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"647\" height=\"121\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Buttons-Stretch-Horizontally.png\" alt=\"PyQt QHBoxLayout - Buttons Stretch Horizontally\" class=\"wp-image-5415\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Buttons-Stretch-Horizontally.png 647w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Buttons-Stretch-Horizontally-300x56.png 300w\" sizes=\"(max-width: 647px) 100vw, 647px\" \/><\/figure>\n\n\n\n<p>To keep the child widgets at their default sizes and align them horizontally, you use a horizontal spacer.<\/p>\n\n\n\n<h3>Align left<\/h3>\n\n\n\n<p>To align the button to the left of the parent widget, you add a horizontal spacer after the child widgets to the QHBoxLayout. For example:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"615\" height=\"97\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Left-using-a-horizontal-spacer.png\" alt=\"PyQt QHBoxLayout - Align Left using a horizontal spacer\" class=\"wp-image-5416\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Left-using-a-horizontal-spacer.png 615w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Left-using-a-horizontal-spacer-300x47.png 300w\" sizes=\"(max-width: 615px) 100vw, 615px\" \/><\/figure>\n\n\n\n<p>In this example, the horizontal spacer with stretch to the end of the layout and left enough space for the buttons.<\/p>\n\n\n\n<p>To add a horizontal spacer to the end of the layout, you call the <code>addStretch()<\/code> method after adding all buttons to the layout:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-5\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-5\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Align right<\/h3>\n\n\n\n<p>Similarly, you can add a spacer at the beginning of the layout to push the buttons to the right:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"617\" height=\"97\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Right-using-a-horizontal-spacer.png\" alt=\"PyQt QHBoxLayout - Align Right using a horizontal spacer\" class=\"wp-image-5417\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Right-using-a-horizontal-spacer.png 617w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Right-using-a-horizontal-spacer-300x47.png 300w\" sizes=\"(max-width: 617px) 100vw, 617px\" \/><\/figure>\n\n\n\n<p>To do this, you call the <code>addStretch()<\/code> method before adding buttons to the layout:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-6\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-6\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Align center<\/h3>\n\n\n\n<p>To align buttons to the center, you add one horizontal spacer at the beginning and the other at the end of the layout:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"616\" height=\"101\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Center-using-horizontal-spacers.png\" alt=\"\" class=\"wp-image-5418\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Center-using-horizontal-spacers.png 616w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Align-Center-using-horizontal-spacers-300x49.png 300w\" sizes=\"(max-width: 616px) 100vw, 616px\" \/><\/figure>\n\n\n\n<p>To do that you call <code>addStretch()<\/code> method before and after adding buttons to the layout:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-7\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-7\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h3>Placing a horizontal spacer between widgets<\/h3>\n\n\n\n<p>It&#8217;s possible to place the horizontal spacer between widgets to push them to the left and right of the layout:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"614\" height=\"96\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Add-a-spacer-between-widgets.png\" alt=\"\" class=\"wp-image-5419\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Add-a-spacer-between-widgets.png 614w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Add-a-spacer-between-widgets-300x47.png 300w\" sizes=\"(max-width: 614px) 100vw, 614px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-8\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add the buttons<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(buttons&#91;<span class=\"hljs-number\">0<\/span>])\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(buttons&#91;<span class=\"hljs-number\">1<\/span>])\n<\/span><\/span><span class='shcb-loc'><span>        \n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add a spacer<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.addStretch()\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># add the cancel button<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout.addWidget(buttons&#91;<span class=\"hljs-number\">2<\/span>])\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-8\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Setting layout stretch factors<\/h2>\n\n\n\n<p>By default, a child widget takes its default size. To set the space that the child widget can stretch, you call the setStretchFactor() method of the QHBoxLayout object:<\/p>\n\n\n<pre class=\"wp-block-code\"><span><code class=\"hljs\">setStretchFactor(widget, factor)<\/code><\/span><\/pre>\n\n\n<p>For example, we can make the Yes and No buttons the same size and take twice as much space as the Cancel button using the stretch factors:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"610\" height=\"98\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Layout-Stretch-Factors.png\" alt=\"PyQt QHBoxLayout - Layout Stretch Factors\" class=\"wp-image-5424\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Layout-Stretch-Factors.png 610w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Layout-Stretch-Factors-300x48.png 300w\" sizes=\"(max-width: 610px) 100vw, 610px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-9\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># set the stretch factors<\/span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.setStretchFactor(buttons&#91;<span class=\"hljs-number\">0<\/span>], <span class=\"hljs-number\">2<\/span>)\n<\/span><\/mark><mark class='shcb-loc'><span>        layout.setStretchFactor(buttons&#91;<span class=\"hljs-number\">1<\/span>], <span class=\"hljs-number\">2<\/span>)\n<\/span><\/mark><mark class='shcb-loc'><span>        layout.setStretchFactor(buttons&#91;<span class=\"hljs-number\">2<\/span>], <span class=\"hljs-number\">1<\/span>)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-9\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Setting spaces between widgets<\/h2>\n\n\n\n<p>By default, the <code>QHBoxLayout<\/code> sets a default space between the child widgets. To change the spaces between them, you use the&nbsp;<code>setSpacing()<\/code>&nbsp;method of the <code>QHBoxLayout<\/code> object.<\/p>\n\n\n\n<p>The following example uses the&nbsp;<code>setSpacing()<\/code>&nbsp;method to set the spaces between&nbsp;buttons to 50px:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"523\" height=\"115\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Spacing.png\" alt=\"PyQt QHBoxLayout - Spacing\" class=\"wp-image-5431\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Spacing.png 523w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Spacing-300x66.png 300w\" sizes=\"(max-width: 523px) 100vw, 523px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-10\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.setSpacing(<span class=\"hljs-number\">50<\/span>)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-10\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Setting content margins<\/h2>\n\n\n\n<p>By default, the&nbsp;<code>QHBoxLayout<\/code>&nbsp;sets specific left, top, right, and bottom margins for child widgets. To change the margins, you use the&nbsp;<code>setContentsMargins()<\/code>&nbsp;method:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"509\" height=\"235\" src=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Setting-Contents-Margins-Example.png\" alt=\"PyQt QHBoxLayout - Setting Contents Margins Example\" class=\"wp-image-5436\" srcset=\"https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Setting-Contents-Margins-Example.png 509w, https:\/\/www.pythontutorial.net\/wp-content\/uploads\/2022\/10\/PyQt-QHBoxLayout-Setting-Contents-Margins-Example-300x139.png 300w\" sizes=\"(max-width: 509px) 100vw, 509px\" \/><\/figure>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-11\" data-shcb-language-name=\"PHP\" data-shcb-language-slug=\"php\"><span><code class=\"hljs language-php\">setContentsMargins(<span class=\"hljs-keyword\">self<\/span>, left: int, top: int, right: int, bottom: int) -&gt; None<\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-11\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">PHP<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">php<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<p>The following example uses the <code>setContentsMargins()<\/code> to set the left, top, right, and bottom margins for the child widgets:<\/p>\n\n\n<pre class=\"wp-block-code\" aria-describedby=\"shcb-language-12\" data-shcb-language-name=\"Python\" data-shcb-language-slug=\"python\"><span><code class=\"hljs language-python shcb-code-table\"><span class='shcb-loc'><span><span class=\"hljs-keyword\">import<\/span> sys\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">from<\/span> PyQt6.QtWidgets <span class=\"hljs-keyword\">import<\/span> QApplication, QWidget, QPushButton, QHBoxLayout\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-class\"><span class=\"hljs-keyword\">class<\/span> <span class=\"hljs-title\">MainWindow<\/span><span class=\"hljs-params\">(QWidget)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def<\/span> <span class=\"hljs-title\">__init__<\/span><span class=\"hljs-params\">(self, *args, **kwargs)<\/span>:<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        super().__init__(*args, **kwargs)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        self.setWindowTitle(<span class=\"hljs-string\">'PyQt QHBoxLayout'<\/span>)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create a layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        layout = QHBoxLayout()\n<\/span><\/span><span class='shcb-loc'><span>        self.setLayout(layout)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># create buttons and add them to the layout<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        titles = &#91;<span class=\"hljs-string\">'Yes'<\/span>, <span class=\"hljs-string\">'No'<\/span>, <span class=\"hljs-string\">'Cancel'<\/span>]\n<\/span><\/span><span class='shcb-loc'><span>        buttons = &#91;QPushButton(title) <span class=\"hljs-keyword\">for<\/span> title <span class=\"hljs-keyword\">in<\/span> titles]\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-keyword\">for<\/span> button <span class=\"hljs-keyword\">in<\/span> buttons:\n<\/span><\/span><span class='shcb-loc'><span>            layout.addWidget(button)\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><mark class='shcb-loc'><span>        layout.setContentsMargins(<span class=\"hljs-number\">50<\/span>, <span class=\"hljs-number\">50<\/span>, <span class=\"hljs-number\">50<\/span>, <span class=\"hljs-number\">50<\/span>)\n<\/span><\/mark><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>        <span class=\"hljs-comment\"># show the window<\/span>\n<\/span><\/span><span class='shcb-loc'><span>        self.show()\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span>\n<\/span><\/span><span class='shcb-loc'><span><span class=\"hljs-keyword\">if<\/span> __name__ == <span class=\"hljs-string\">'__main__'<\/span>:\n<\/span><\/span><span class='shcb-loc'><span>    app = QApplication(sys.argv)\n<\/span><\/span><span class='shcb-loc'><span>    window = MainWindow()\n<\/span><\/span><span class='shcb-loc'><span>    sys.exit(app.exec())\n<\/span><\/span><\/code><\/span><small class=\"shcb-language\" id=\"shcb-language-12\"><span class=\"shcb-language__label\">Code language:<\/span> <span class=\"shcb-language__name\">Python<\/span> <span class=\"shcb-language__paren\">(<\/span><span class=\"shcb-language__slug\">python<\/span><span class=\"shcb-language__paren\">)<\/span><\/small><\/pre>\n\n\n<h2>Summary<\/h2>\n\n\n\n<ul>\n<li>Use <code>QHBoxLayout<\/code> to divide the parent widget into horizontal boxes and place them sequentially from left to right.<\/li>\n\n\n\n<li>Use the <code>addStretch()<\/code> method of the <code>QHBoxLayout<\/code> object to add a horizontal spacer to the layout to align the child widgets left, right, or center.<\/li>\n\n\n\n<li>Use the <code>setStretchFactor()<\/code> method of the <code>QHBoxLayout<\/code> object to set the stretch factor for a child widget.<\/li>\n\n\n\n<li>Use the <code>setSpacing()<\/code> method of the <code>QHBoxLayout<\/code> object to set the spaces between child widgets.<\/li>\n\n\n\n<li>Use the <code>setContentsMargins()<\/code> method of the <code>QHBoxLayout<\/code> object to set the left, top, right, and bottom margins.<\/li>\n<\/ul>\n<div class=\"helpful-block-content\" data-title=\"\">\n\t<header>\n\t\t<div class=\"wth-question\">Did you find this tutorial helpful ?<\/div>\n\t\t<div class=\"wth-thumbs\">\n\t\t\t<button\n\t\t\t\tdata-post=\"4952\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qhboxlayout\/\"\n\t\t\t\tdata-post-title=\"PyQt QHBoxLayout\"\n\t\t\t\tdata-response=\"1\"\n\t\t\t\tclass=\"wth-btn-rounded wth-yes-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t\tclass=\"feather feather-thumbs-up block w-full h-full\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> Yes <\/span>\n\t\t\t<\/button>\n\n\t\t\t<button\n\t\t\t\tdata-response=\"0\"\n\t\t\t\tdata-post=\"4952\"\n\t\t\t\tdata-post-url=\"https:\/\/www.pythontutorial.net\/pyqt\/pyqt-qhboxlayout\/\"\n\t\t\t\tdata-post-title=\"PyQt QHBoxLayout\"\n\t\t\t\tclass=\"wth-btn-rounded wth-no-btn\"\n\t\t\t>\n\t\t\t\t<svg\n\t\t\t\t\txmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tstroke-width=\"2\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\tstroke-linejoin=\"round\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"\n\t\t\t\t\t><\/path>\n\t\t\t\t<\/svg>\n\t\t\t\t<span class=\"sr-only\"> No <\/span>\n\t\t\t<\/button>\n\t\t<\/div>\n\t<\/header>\n\n\t<div class=\"wth-form hidden\">\n\t\t<div class=\"wth-form-wrapper\">\n\t\t\t<div class=\"wth-title\"><\/div>\n\t\t\t<textarea class=\"wth-message\"><\/textarea>\n\t\t\t<input type=\"button\" name=\"wth-submit\" class=\"wth-btn wth-btn-submit\" id=\"wth-submit\" \/>\n\t\t\t<input type=\"button\" class=\"wth-btn wth-btn-cancel\" value=\"Cancel\" \/>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>In this tutorial, you&#8217;ll learn how to use the PyQt QHBoxLayout to arrange widgets horizontally.<\/p>\n","protected":false},"author":1,"featured_media":0,"parent":4862,"menu_order":5,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4952"}],"collection":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/comments?post=4952"}],"version-history":[{"count":5,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4952\/revisions"}],"predecessor-version":[{"id":6182,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4952\/revisions\/6182"}],"up":[{"embeddable":true,"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/pages\/4862"}],"wp:attachment":[{"href":"https:\/\/www.pythontutorial.net\/wp-json\/wp\/v2\/media?parent=4952"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}